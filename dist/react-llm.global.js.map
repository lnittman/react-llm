{"version":3,"sources":["../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs","../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build1/node_modules/@sqlite.org/sqlite-wasm/index.mjs","../src/index.ts","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/constants.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/util.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/options.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/create-element.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/component.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/diff/props.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/create-context.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/diff/children.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/diff/index.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/render.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/clone-element.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/src/diff/catch-error.js","../node_modules/.pnpm/preact@10.26.2/node_modules/preact/hooks/src/index.js","../node_modules/.pnpm/@preact+signals-core@1.8.0/node_modules/@preact/signals-core/src/index.ts","../node_modules/.pnpm/@preact+signals@1.3.2_preact@10.26.2/node_modules/@preact/signals/src/index.ts","../node_modules/.pnpm/@google+generative-ai@0.2.1/node_modules/@google/generative-ai/dist/index.mjs","../src/gemini/gemini.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/defaults.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/helpers.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/Tokenizer.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/rules.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/Lexer.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/Renderer.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/TextRenderer.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/Parser.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/Hooks.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/Instance.ts","../node_modules/.pnpm/marked@11.2.0/node_modules/marked/src/marked.ts","../src/db/schema.ts","../src/db/database.ts","../src/components/Toolbar.tsx"],"sourcesContent":["/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.49.1\"\n ** SQLITE_VERSION_NUMBER 3049001\n ** SQLITE_SOURCE_ID \"2025-02-18 13:38:58 873d4e274b4988d260ba8354a9718324a1c26187a4ab4c1cc0227c03d0f10e70\"\n **\n ** Using the Emscripten SDK version 3.1.70.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptName = import.meta.url;\n\n  return function (moduleArg = {}) {\n    var moduleRtn;\n\n    var Module = moduleArg;\n\n    var readyPromiseResolve, readyPromiseReject;\n    var readyPromise = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string' &&\n      process.type != 'renderer';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var readAsync, readBinary;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptName) {\n        scriptDirectory = _scriptName;\n      }\n\n      if (scriptDirectory.startsWith('blob:')) {\n        scriptDirectory = '';\n      } else {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      }\n\n      {\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url) => {\n          return fetch(url, { credentials: 'same-origin' }).then((response) => {\n            if (response.ok) {\n              return response.arrayBuffer();\n            }\n            return Promise.reject(\n              new Error(response.status + ' : ' + response.url),\n            );\n          });\n        };\n      }\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.error.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    var wasmBinary = Module['wasmBinary'];\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 32768,\n      });\n    }\n\n    updateMemoryViews();\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function preRun() {\n      var preRuns = Module['preRun'];\n      if (preRuns) {\n        if (typeof preRuns == 'function') preRuns = [preRuns];\n        preRuns.forEach(addOnPreRun);\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      var postRuns = Module['postRun'];\n      if (postRuns) {\n        if (typeof postRuns == 'function') postRuns = [postRuns];\n        postRuns.forEach(addOnPostRun);\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      Module['onAbort']?.(what);\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    var isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n    var isFileURI = (filename) => filename.startsWith('file://');\n\n    function findWasmBinary() {\n      if (Module['locateFile']) {\n        var f = 'sqlite3.wasm';\n        if (!isDataURI(f)) {\n          return locateFile(f);\n        }\n        return f;\n      }\n\n      return new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    var wasmBinaryFile;\n\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n    }\n\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary) {\n        return readAsync(binaryFile).then(\n          (response) => new Uint8Array(response),\n\n          () => getBinarySync(binaryFile),\n        );\n      }\n\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile)\n        .then((binary) => {\n          return WebAssembly.instantiate(binary, imports);\n        })\n        .then(receiver, (reason) => {\n          err(`failed to asynchronously prepare wasm: ${reason}`);\n\n          abort(reason);\n        });\n    }\n\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(binaryFile) &&\n        typeof fetch == 'function'\n      ) {\n        return fetch(binaryFile, { credentials: 'same-origin' }).then(\n          (response) => {\n            var result = WebAssembly.instantiateStreaming(response, imports);\n\n            return result.then(callback, function (reason) {\n              err(`wasm streaming compile failed: ${reason}`);\n              err('falling back to ArrayBuffer instantiation');\n              return instantiateArrayBuffer(binaryFile, imports, callback);\n            });\n          },\n        );\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n\n    function getWasmImports() {\n      return {\n        env: wasmImports,\n        wasi_snapshot_preview1: wasmImports,\n      };\n    }\n\n    function createWasm() {\n      var info = getWasmImports();\n\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n\n        addOnInit(wasmExports['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n        return wasmExports;\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          return Module['instantiateWasm'](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      wasmBinaryFile ??= findWasmBinary();\n\n      instantiateAsync(\n        wasmBinary,\n        wasmBinaryFile,\n        info,\n        receiveInstantiationResult,\n      ).catch(readyPromiseReject);\n      return {};\n    }\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n    var callRuntimeCallbacks = (callbacks) => {\n      callbacks.forEach((f) => f(Module));\n    };\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr];\n        case 'i8':\n          return HEAP8[ptr];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort(`invalid type for getValue: ${type}`);\n      }\n    }\n\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          HEAP64[ptr >> 3] = BigInt(value);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort(`invalid type for setValue: ${type}`);\n      }\n    }\n\n    var stackRestore = (val) => __emscripten_stack_restore(val);\n\n    var stackSave = () => _emscripten_stack_get_current();\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: (...paths) => PATH.normalize(paths.join('/')),\n      join2: (l, r) => PATH.normalize(l + '/' + r),\n    };\n\n    var initRandomFill = () => {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        return (view) => crypto.getRandomValues(view);\n      } else abort('initRandomDevice');\n    };\n    var randomFill = (view) => {\n      return (randomFill = initRandomFill())(view);\n    };\n\n    var PATH_FS = {\n      resolve: (...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? args[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    };\n\n    var FS_stdin_getChar_buffer = [];\n\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (\n          typeof window != 'undefined' &&\n          typeof window.prompt == 'function'\n        ) {\n          result = window.prompt('Input: ');\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else {\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a,\n              0x00, 0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ],\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n    };\n\n    var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n    var mmapAlloc = (size) => {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (ptr) zeroMemory(ptr, size);\n      return ptr;\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n            },\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync,\n            },\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink,\n            },\n            stream: {},\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: FS.chrdev_stream_ops,\n          },\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(\n                    contents,\n                    position,\n                    position + length,\n                  );\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url).then(\n        (arrayBuffer) => {\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (err) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw `Loading data file \"${url}\" failed.`;\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    };\n\n    var FS_createDataFile = (\n      parent,\n      name,\n      fileData,\n      canRead,\n      canWrite,\n      canOwn,\n    ) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n\n    var preloadPlugins = Module['preloadPlugins'] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != 'undefined') Browser.init();\n\n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (\n      parent,\n      name,\n      url,\n      canRead,\n      canWrite,\n      onload,\n      onerror,\n      dontCreateFile,\n      canOwn,\n      preFinish,\n    ) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(\n              parent,\n              name,\n              byteArray,\n              canRead,\n              canWrite,\n              canOwn,\n            );\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (\n          FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n            onerror?.();\n            removeRunDependency(dep);\n          })\n        ) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n\n    var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        r: 0,\n        'r+': 2,\n        w: 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        a: 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: class {\n        constructor(errno) {\n          this.name = 'ErrnoError';\n          this.errno = errno;\n        }\n      },\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      readFiles: {},\n      FSStream: class {\n        constructor() {\n          this.shared = {};\n        }\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return this.flags & 1024;\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n      FSNode: class {\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n          this.readMode = 292 | 73;\n          this.writeMode = 146;\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? `${mount}/${path}`\n              : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          stream.stream_ops.open?.(stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push(...m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open(path, flags, mode) {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if (flags & 64) {\n          mode = typeof mode == 'undefined' ? 438 : mode;\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices() {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories() {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount() {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup(parent, name) {\n                  var fd = +name;\n                  var stream = FS.getStreamChecked(fd);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams(input, output, error) {\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      staticInit() {\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init(input, output, error) {\n        FS.initialized = true;\n\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n\n        FS.createStandardStreams(input, output, error);\n      },\n      quit() {\n        FS.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else {\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        class LazyUint8Array {\n          constructor() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize) | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n    };\n\n    var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        var stat = func(path);\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = stat.mode;\n        HEAPU32[(buf + 8) >> 2] = stat.nlink;\n        HEAP32[(buf + 12) >> 2] = stat.uid;\n        HEAP32[(buf + 16) >> 2] = stat.gid;\n        HEAP32[(buf + 20) >> 2] = stat.rdev;\n        HEAP64[(buf + 24) >> 3] = BigInt(stat.size);\n        HEAP32[(buf + 32) >> 2] = 4096;\n        HEAP32[(buf + 36) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(buf + 40) >> 3] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(buf + 48) >> 2] = (atime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 56) >> 3] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(buf + 64) >> 2] = (mtime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 72) >> 3] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(buf + 80) >> 2] = (ctime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 88) >> 3] = BigInt(stat.ino);\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n      varargs: undefined,\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function syscallGetVarargI() {\n      var ret = HEAP32[+SYSCALLS.varargs >> 2];\n      SYSCALLS.varargs += 4;\n      return ret;\n    }\n    var syscallGetVarargP = syscallGetVarargI;\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = syscallGetVarargI();\n            if (arg < 0) {\n              return -28;\n            }\n            while (FS.streams[arg]) {\n              arg++;\n            }\n            var newStream;\n            newStream = FS.dupStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = syscallGetVarargI();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 12: {\n            var arg = syscallGetVarargP();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 13:\n          case 14:\n            return 0;\n        }\n        return -28;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var INT53_MAX = 9007199254740992;\n\n    var INT53_MIN = -9007199254740992;\n    var bigintToI53Checked = (num) =>\n      num < INT53_MIN || num > INT53_MAX ? NaN : Number(num);\n    function ___syscall_ftruncate64(fd, length) {\n      length = bigintToI53Checked(length);\n\n      try {\n        if (isNaN(length)) return 61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21505: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcgets) {\n              var termios = stream.tty.ops.ioctl_tcgets(stream);\n              var argp = syscallGetVarargP();\n              HEAP32[argp >> 2] = termios.c_iflag || 0;\n              HEAP32[(argp + 4) >> 2] = termios.c_oflag || 0;\n              HEAP32[(argp + 8) >> 2] = termios.c_cflag || 0;\n              HEAP32[(argp + 12) >> 2] = termios.c_lflag || 0;\n              for (var i = 0; i < 32; i++) {\n                HEAP8[argp + i + 17] = termios.c_cc[i] || 0;\n              }\n              return 0;\n            }\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcsets) {\n              var argp = syscallGetVarargP();\n              var c_iflag = HEAP32[argp >> 2];\n              var c_oflag = HEAP32[(argp + 4) >> 2];\n              var c_cflag = HEAP32[(argp + 8) >> 2];\n              var c_lflag = HEAP32[(argp + 12) >> 2];\n              var c_cc = [];\n              for (var i = 0; i < 32; i++) {\n                c_cc.push(HEAP8[argp + i + 17]);\n              }\n              return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\n                c_iflag,\n                c_oflag,\n                c_cflag,\n                c_lflag,\n                c_cc,\n              });\n            }\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = syscallGetVarargP();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = syscallGetVarargP();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tiocgwinsz) {\n              var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n              var argp = syscallGetVarargP();\n              HEAP16[argp >> 1] = winsize[0];\n              HEAP16[(argp + 2) >> 1] = winsize[1];\n            }\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21515: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? syscallGetVarargI() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var readI53FromI64 = (ptr) => {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    };\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        var now = Date.now(),\n          atime,\n          mtime;\n        if (!times) {\n          atime = now;\n          mtime = now;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            atime = now;\n          } else if (nanoseconds == 1073741822) {\n            atime = -1;\n          } else {\n            atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            mtime = now;\n          } else if (nanoseconds == 1073741822) {\n            mtime = -1;\n          } else {\n            mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n        }\n\n        if (mtime != -1 || atime != -1) {\n          FS.utime(path, atime, mtime);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = 1;\n    var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n    var isLeapYear = (year) =>\n      year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\n    var MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = leap\n        ? MONTH_DAYS_LEAP_CUMULATIVE\n        : MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    };\n\n    function __localtime_js(time, tmPtr) {\n      time = bigintToI53Checked(time);\n\n      var date = new Date(time * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = ydayFromDate(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, offset, allocated, addr) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, offset, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      var extractZone = (timezoneOffset) => {\n        var sign = timezoneOffset >= 0 ? '-' : '+';\n\n        var absOffset = Math.abs(timezoneOffset);\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, '0');\n        var minutes = String(absOffset % 60).padStart(2, '0');\n\n        return `UTC${sign}${hours}${minutes}`;\n      };\n\n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n\n    var _emscripten_date_now = () => Date.now();\n\n    var _emscripten_get_now = () => performance.now();\n\n    var getHeapMax = () => 2147483648;\n\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n\n      requestedSize >>>= 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    var ENV = {};\n\n    var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++] = str.charCodeAt(i);\n      }\n\n      HEAP8[buffer] = 0;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => (bufSize += string.length + 1));\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var rightsBase = 0;\n        var rightsInheriting = 0;\n        var flags = 0;\n        {\n          var stream = SYSCALLS.getStreamFromFD(fd);\n\n          var type = stream.tty\n            ? 2\n            : FS.isDir(stream.mode)\n              ? 3\n              : FS.isLink(stream.mode)\n                ? 7\n                : 4;\n        }\n        HEAP8[pbuf] = type;\n        HEAP16[(pbuf + 2) >> 1] = flags;\n        HEAP64[(pbuf + 8) >> 3] = BigInt(rightsBase);\n        HEAP64[(pbuf + 16) >> 3] = BigInt(rightsInheriting);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        HEAP64[newOffset >> 3] = BigInt(stream.position);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops?.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n\n    var wasmImports = {\n      __syscall_chmod: ___syscall_chmod,\n\n      __syscall_faccessat: ___syscall_faccessat,\n\n      __syscall_fchmod: ___syscall_fchmod,\n\n      __syscall_fchown32: ___syscall_fchown32,\n\n      __syscall_fcntl64: ___syscall_fcntl64,\n\n      __syscall_fstat64: ___syscall_fstat64,\n\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n\n      __syscall_getcwd: ___syscall_getcwd,\n\n      __syscall_ioctl: ___syscall_ioctl,\n\n      __syscall_lstat64: ___syscall_lstat64,\n\n      __syscall_mkdirat: ___syscall_mkdirat,\n\n      __syscall_newfstatat: ___syscall_newfstatat,\n\n      __syscall_openat: ___syscall_openat,\n\n      __syscall_readlinkat: ___syscall_readlinkat,\n\n      __syscall_rmdir: ___syscall_rmdir,\n\n      __syscall_stat64: ___syscall_stat64,\n\n      __syscall_unlinkat: ___syscall_unlinkat,\n\n      __syscall_utimensat: ___syscall_utimensat,\n\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n\n      _localtime_js: __localtime_js,\n\n      _mmap_js: __mmap_js,\n\n      _munmap_js: __munmap_js,\n\n      _tzset_js: __tzset_js,\n\n      emscripten_date_now: _emscripten_date_now,\n\n      emscripten_get_now: _emscripten_get_now,\n\n      emscripten_resize_heap: _emscripten_resize_heap,\n\n      environ_get: _environ_get,\n\n      environ_sizes_get: _environ_sizes_get,\n\n      fd_close: _fd_close,\n\n      fd_fdstat_get: _fd_fdstat_get,\n\n      fd_read: _fd_read,\n\n      fd_seek: _fd_seek,\n\n      fd_sync: _fd_sync,\n\n      fd_write: _fd_write,\n\n      memory: wasmMemory,\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = () =>\n      (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        wasmExports['sqlite3_status64'])(a0, a1, a2, a3));\n    var _sqlite3_status = (Module['_sqlite3_status'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status = Module['_sqlite3_status'] =\n        wasmExports['sqlite3_status'])(a0, a1, a2, a3));\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        wasmExports['sqlite3_db_status'])(a0, a1, a2, a3, a4));\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = (a0) =>\n      (_sqlite3_msize = Module['_sqlite3_msize'] =\n        wasmExports['sqlite3_msize'])(a0));\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = (a0) =>\n      (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        wasmExports['sqlite3_vfs_find'])(a0));\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = () =>\n      (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        wasmExports['sqlite3_initialize'])());\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = (a0) =>\n      (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        wasmExports['sqlite3_malloc'])(a0));\n    var _sqlite3_free = (Module['_sqlite3_free'] = (a0) =>\n      (_sqlite3_free = Module['_sqlite3_free'] = wasmExports['sqlite3_free'])(\n        a0,\n      ));\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = (a0, a1) =>\n      (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        wasmExports['sqlite3_vfs_register'])(a0, a1));\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] = (a0) =>\n      (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n        wasmExports['sqlite3_vfs_unregister'])(a0));\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = (a0) =>\n      (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        wasmExports['sqlite3_malloc64'])(a0));\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = (a0, a1) =>\n      (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        wasmExports['sqlite3_realloc'])(a0, a1));\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = (a0, a1) =>\n      (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        wasmExports['sqlite3_realloc64'])(a0, a1));\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = (a0) =>\n      (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        wasmExports['sqlite3_value_text'])(a0));\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = (a0, a1) =>\n      (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        wasmExports['sqlite3_randomness'])(a0, a1));\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = (a0, a1) =>\n      (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        wasmExports['sqlite3_stricmp'])(a0, a1));\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = (a0, a1, a2) =>\n      (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        wasmExports['sqlite3_strnicmp'])(a0, a1, a2));\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] = (a0, a1) =>\n      (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n        wasmExports['sqlite3_uri_parameter'])(a0, a1));\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = (a0, a1, a2) =>\n      (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        wasmExports['sqlite3_uri_boolean'])(a0, a1, a2));\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = (a0, a1, a2, a3) =>\n      (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        wasmExports['sqlite3_serialize'])(a0, a1, a2, a3));\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        wasmExports['sqlite3_prepare_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_step = (Module['_sqlite3_step'] = (a0) =>\n      (_sqlite3_step = Module['_sqlite3_step'] = wasmExports['sqlite3_step'])(\n        a0,\n      ));\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = (a0, a1) =>\n      (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        wasmExports['sqlite3_column_int64'])(a0, a1));\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = (a0) =>\n      (_sqlite3_reset = Module['_sqlite3_reset'] =\n        wasmExports['sqlite3_reset'])(a0));\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = (a0, a1, a2, a3, a4) =>\n      (_sqlite3_exec = Module['_sqlite3_exec'] = wasmExports['sqlite3_exec'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n      ));\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = (a0, a1) =>\n      (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        wasmExports['sqlite3_column_int'])(a0, a1));\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = (a0) =>\n      (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        wasmExports['sqlite3_finalize'])(a0));\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        wasmExports['sqlite3_file_control'])(a0, a1, a2, a3));\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = (a0, a1) =>\n      (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        wasmExports['sqlite3_column_name'])(a0, a1));\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = (a0, a1) =>\n      (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        wasmExports['sqlite3_column_text'])(a0, a1));\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = (a0, a1) =>\n      (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        wasmExports['sqlite3_column_type'])(a0, a1));\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = (a0) =>\n      (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        wasmExports['sqlite3_errmsg'])(a0));\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        wasmExports['sqlite3_deserialize'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] = (a0) =>\n      (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n        wasmExports['sqlite3_clear_bindings'])(a0));\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = (a0) =>\n      (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        wasmExports['sqlite3_value_blob'])(a0));\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = (a0) =>\n      (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        wasmExports['sqlite3_value_bytes'])(a0));\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = (a0) =>\n      (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        wasmExports['sqlite3_value_double'])(a0));\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = (a0) =>\n      (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        wasmExports['sqlite3_value_int'])(a0));\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = (a0) =>\n      (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        wasmExports['sqlite3_value_int64'])(a0));\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] = (a0) =>\n      (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n        wasmExports['sqlite3_value_subtype'])(a0));\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] = (a0, a1) =>\n      (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n        wasmExports['sqlite3_value_pointer'])(a0, a1));\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = (a0) =>\n      (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        wasmExports['sqlite3_value_type'])(a0));\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] = (a0) =>\n      (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n        wasmExports['sqlite3_value_nochange'])(a0));\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] = (a0) =>\n      (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n        wasmExports['sqlite3_value_frombind'])(a0));\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = (a0) =>\n      (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        wasmExports['sqlite3_value_dup'])(a0));\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = (a0) =>\n      (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        wasmExports['sqlite3_value_free'])(a0));\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        wasmExports['sqlite3_result_blob'])(a0, a1, a2, a3));\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      (a0) =>\n        (_sqlite3_result_error_toobig = Module['_sqlite3_result_error_toobig'] =\n          wasmExports['sqlite3_result_error_toobig'])(a0));\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] = (\n      a0,\n    ) =>\n      (_sqlite3_result_error_nomem = Module['_sqlite3_result_error_nomem'] =\n        wasmExports['sqlite3_result_error_nomem'])(a0));\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] = (a0, a1) =>\n      (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n        wasmExports['sqlite3_result_double'])(a0, a1));\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        wasmExports['sqlite3_result_error'])(a0, a1, a2));\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = (a0, a1) =>\n      (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        wasmExports['sqlite3_result_int'])(a0, a1));\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = (a0, a1) =>\n      (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        wasmExports['sqlite3_result_int64'])(a0, a1));\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = (a0) =>\n      (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        wasmExports['sqlite3_result_null'])(a0));\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n        wasmExports['sqlite3_result_pointer'])(a0, a1, a2, a3));\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n        wasmExports['sqlite3_result_subtype'])(a0, a1));\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        wasmExports['sqlite3_result_text'])(a0, a1, a2, a3));\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n        wasmExports['sqlite3_result_zeroblob'])(a0, a1));\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob64 = Module['_sqlite3_result_zeroblob64'] =\n        wasmExports['sqlite3_result_zeroblob64'])(a0, a1));\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_error_code = Module['_sqlite3_result_error_code'] =\n        wasmExports['sqlite3_result_error_code'])(a0, a1));\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = (a0) =>\n      (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        wasmExports['sqlite3_user_data'])(a0));\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] = (\n      a0,\n    ) =>\n      (_sqlite3_context_db_handle = Module['_sqlite3_context_db_handle'] =\n        wasmExports['sqlite3_context_db_handle'])(a0));\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] = (a0) =>\n      (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n        wasmExports['sqlite3_vtab_nochange'])(a0));\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] = (a0, a1) =>\n      (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n        wasmExports['sqlite3_vtab_in_first'])(a0, a1));\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = (a0, a1) =>\n      (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        wasmExports['sqlite3_vtab_in_next'])(a0, a1));\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_aggregate_context = Module['_sqlite3_aggregate_context'] =\n        wasmExports['sqlite3_aggregate_context'])(a0, a1));\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = (a0, a1) =>\n      (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        wasmExports['sqlite3_get_auxdata'])(a0, a1));\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        wasmExports['sqlite3_set_auxdata'])(a0, a1, a2, a3));\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = (a0) =>\n      (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        wasmExports['sqlite3_column_count'])(a0));\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = (a0) =>\n      (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        wasmExports['sqlite3_data_count'])(a0));\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = (a0, a1) =>\n      (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        wasmExports['sqlite3_column_blob'])(a0, a1));\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = (a0, a1) =>\n      (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        wasmExports['sqlite3_column_bytes'])(a0, a1));\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] = (a0, a1) =>\n      (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n        wasmExports['sqlite3_column_double'])(a0, a1));\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = (a0, a1) =>\n      (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        wasmExports['sqlite3_column_value'])(a0, a1));\n    var _sqlite3_column_decltype = (Module['_sqlite3_column_decltype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_column_decltype = Module['_sqlite3_column_decltype'] =\n        wasmExports['sqlite3_column_decltype'])(a0, a1));\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        wasmExports['sqlite3_bind_blob'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = (a0, a1, a2) =>\n      (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        wasmExports['sqlite3_bind_double'])(a0, a1, a2));\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        wasmExports['sqlite3_bind_int'])(a0, a1, a2));\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        wasmExports['sqlite3_bind_int64'])(a0, a1, a2));\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = (a0, a1) =>\n      (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        wasmExports['sqlite3_bind_null'])(a0, a1));\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        wasmExports['sqlite3_bind_pointer'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        wasmExports['sqlite3_bind_text'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = (a0) =>\n      (_sqlite3_bind_parameter_count = Module['_sqlite3_bind_parameter_count'] =\n        wasmExports['sqlite3_bind_parameter_count'])(a0));\n    var _sqlite3_bind_parameter_name = (Module['_sqlite3_bind_parameter_name'] =\n      (a0, a1) =>\n        (_sqlite3_bind_parameter_name = Module['_sqlite3_bind_parameter_name'] =\n          wasmExports['sqlite3_bind_parameter_name'])(a0, a1));\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = (a0, a1) =>\n      (_sqlite3_bind_parameter_index = Module['_sqlite3_bind_parameter_index'] =\n        wasmExports['sqlite3_bind_parameter_index'])(a0, a1));\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = (a0) =>\n      (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        wasmExports['sqlite3_db_handle'])(a0));\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] = (a0) =>\n      (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n        wasmExports['sqlite3_stmt_readonly'])(a0));\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] = (a0) =>\n      (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n        wasmExports['sqlite3_stmt_isexplain'])(a0));\n    var _sqlite3_stmt_explain = (Module['_sqlite3_stmt_explain'] = (a0, a1) =>\n      (_sqlite3_stmt_explain = Module['_sqlite3_stmt_explain'] =\n        wasmExports['sqlite3_stmt_explain'])(a0, a1));\n    var _sqlite3_stmt_busy = (Module['_sqlite3_stmt_busy'] = (a0) =>\n      (_sqlite3_stmt_busy = Module['_sqlite3_stmt_busy'] =\n        wasmExports['sqlite3_stmt_busy'])(a0));\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = (a0, a1, a2) =>\n      (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        wasmExports['sqlite3_stmt_status'])(a0, a1, a2));\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = (a0) =>\n      (_sqlite3_sql = Module['_sqlite3_sql'] = wasmExports['sqlite3_sql'])(a0));\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = (a0) =>\n      (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        wasmExports['sqlite3_expanded_sql'])(a0));\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n        wasmExports['sqlite3_preupdate_old'])(a0, a1, a2));\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] = (a0) =>\n      (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n        wasmExports['sqlite3_preupdate_count'])(a0));\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] = (a0) =>\n      (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n        wasmExports['sqlite3_preupdate_depth'])(a0));\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      (a0) =>\n        (_sqlite3_preupdate_blobwrite = Module['_sqlite3_preupdate_blobwrite'] =\n          wasmExports['sqlite3_preupdate_blobwrite'])(a0));\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n        wasmExports['sqlite3_preupdate_new'])(a0, a1, a2));\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] = (\n      a0,\n    ) =>\n      (_sqlite3_value_numeric_type = Module['_sqlite3_value_numeric_type'] =\n        wasmExports['sqlite3_value_numeric_type'])(a0));\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n        wasmExports['sqlite3_set_authorizer'])(a0, a1, a2));\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = (a0, a1) =>\n      (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        wasmExports['sqlite3_strglob'])(a0, a1));\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = (a0, a1, a2) =>\n      (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        wasmExports['sqlite3_strlike'])(a0, a1, a2));\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] = (a0) =>\n      (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n        wasmExports['sqlite3_auto_extension'])(a0));\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = (a0) =>\n      (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        wasmExports['sqlite3_cancel_auto_extension'])(a0));\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = () =>\n      (_sqlite3_reset_auto_extension = Module['_sqlite3_reset_auto_extension'] =\n        wasmExports['sqlite3_reset_auto_extension'])());\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        wasmExports['sqlite3_prepare_v3'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n        wasmExports['sqlite3_create_module'])(a0, a1, a2, a3));\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_module_v2 = Module['_sqlite3_create_module_v2'] =\n        wasmExports['sqlite3_create_module_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = (a0, a1) =>\n      (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        wasmExports['sqlite3_drop_modules'])(a0, a1));\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = (a0, a1) =>\n      (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        wasmExports['sqlite3_declare_vtab'])(a0, a1));\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] = (\n      a0,\n    ) =>\n      (_sqlite3_vtab_on_conflict = Module['_sqlite3_vtab_on_conflict'] =\n        wasmExports['sqlite3_vtab_on_conflict'])(a0));\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n        wasmExports['sqlite3_vtab_collation'])(a0, a1));\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = (a0, a1, a2) =>\n      (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        wasmExports['sqlite3_vtab_in'])(a0, a1, a2));\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n        wasmExports['sqlite3_vtab_rhs_value'])(a0, a1, a2));\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] = (a0) =>\n      (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n        wasmExports['sqlite3_vtab_distinct'])(a0));\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        wasmExports['sqlite3_keyword_name'])(a0, a1, a2));\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] = () =>\n      (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n        wasmExports['sqlite3_keyword_count'])());\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] = (a0, a1) =>\n      (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n        wasmExports['sqlite3_keyword_check'])(a0, a1));\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = (a0) =>\n      (_sqlite3_complete = Module['_sqlite3_complete'] =\n        wasmExports['sqlite3_complete'])(a0));\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = () =>\n      (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        wasmExports['sqlite3_libversion'])());\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      () =>\n        (_sqlite3_libversion_number = Module['_sqlite3_libversion_number'] =\n          wasmExports['sqlite3_libversion_number'])());\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = () =>\n      (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        wasmExports['sqlite3_shutdown'])());\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] = (\n      a0,\n    ) =>\n      (_sqlite3_last_insert_rowid = Module['_sqlite3_last_insert_rowid'] =\n        wasmExports['sqlite3_last_insert_rowid'])(a0));\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = (a0, a1) =>\n      (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        wasmExports['sqlite3_set_last_insert_rowid'])(a0, a1));\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = (a0) =>\n      (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        wasmExports['sqlite3_changes64'])(a0));\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = (a0) =>\n      (_sqlite3_changes = Module['_sqlite3_changes'] =\n        wasmExports['sqlite3_changes'])(a0));\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] = (a0) =>\n      (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n        wasmExports['sqlite3_total_changes64'])(a0));\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] = (a0) =>\n      (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n        wasmExports['sqlite3_total_changes'])(a0));\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = (a0, a1) =>\n      (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        wasmExports['sqlite3_txn_state'])(a0, a1));\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = (a0) =>\n      (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        wasmExports['sqlite3_close_v2'])(a0));\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        wasmExports['sqlite3_busy_handler'])(a0, a1, a2));\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_progress_handler = Module['_sqlite3_progress_handler'] =\n        wasmExports['sqlite3_progress_handler'])(a0, a1, a2, a3));\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = (a0, a1) =>\n      (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        wasmExports['sqlite3_busy_timeout'])(a0, a1));\n    var _sqlite3_interrupt = (Module['_sqlite3_interrupt'] = (a0) =>\n      (_sqlite3_interrupt = Module['_sqlite3_interrupt'] =\n        wasmExports['sqlite3_interrupt'])(a0));\n    var _sqlite3_is_interrupted = (Module['_sqlite3_is_interrupted'] = (a0) =>\n      (_sqlite3_is_interrupted = Module['_sqlite3_is_interrupted'] =\n        wasmExports['sqlite3_is_interrupted'])(a0));\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n    ) =>\n      (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n        wasmExports['sqlite3_create_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n      ));\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3_create_function_v2 = Module['_sqlite3_create_function_v2'] =\n        wasmExports['sqlite3_create_function_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) =>\n      (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        wasmExports['sqlite3_create_window_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n        a9,\n      ));\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_overload_function = Module['_sqlite3_overload_function'] =\n        wasmExports['sqlite3_overload_function'])(a0, a1, a2));\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        wasmExports['sqlite3_trace_v2'])(a0, a1, a2, a3));\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = (a0, a1, a2) =>\n      (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        wasmExports['sqlite3_commit_hook'])(a0, a1, a2));\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = (a0, a1, a2) =>\n      (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        wasmExports['sqlite3_update_hook'])(a0, a1, a2));\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n        wasmExports['sqlite3_rollback_hook'])(a0, a1, a2));\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n        wasmExports['sqlite3_preupdate_hook'])(a0, a1, a2));\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = (a0) =>\n      (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        wasmExports['sqlite3_error_offset'])(a0));\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = (a0) =>\n      (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        wasmExports['sqlite3_errcode'])(a0));\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] = (\n      a0,\n    ) =>\n      (_sqlite3_extended_errcode = Module['_sqlite3_extended_errcode'] =\n        wasmExports['sqlite3_extended_errcode'])(a0));\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = (a0) =>\n      (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        wasmExports['sqlite3_errstr'])(a0));\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = (a0, a1, a2) =>\n      (_sqlite3_limit = Module['_sqlite3_limit'] =\n        wasmExports['sqlite3_limit'])(a0, a1, a2));\n    var _sqlite3_open = (Module['_sqlite3_open'] = (a0, a1) =>\n      (_sqlite3_open = Module['_sqlite3_open'] = wasmExports['sqlite3_open'])(\n        a0,\n        a1,\n      ));\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        wasmExports['sqlite3_open_v2'])(a0, a1, a2, a3));\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_collation = Module['_sqlite3_create_collation'] =\n        wasmExports['sqlite3_create_collation'])(a0, a1, a2, a3, a4));\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3_create_collation_v2 = Module['_sqlite3_create_collation_v2'] =\n          wasmExports['sqlite3_create_collation_v2'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_collation_needed = Module['_sqlite3_collation_needed'] =\n        wasmExports['sqlite3_collation_needed'])(a0, a1, a2));\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] = (a0) =>\n      (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n        wasmExports['sqlite3_get_autocommit'])(a0));\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        wasmExports['sqlite3_table_column_metadata'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = (a0, a1) =>\n      (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        wasmExports['sqlite3_extended_result_codes'])(a0, a1));\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = (a0, a1) =>\n      (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        wasmExports['sqlite3_uri_key'])(a0, a1));\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = (a0, a1, a2) =>\n      (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        wasmExports['sqlite3_uri_int64'])(a0, a1, a2));\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = (a0, a1) =>\n      (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        wasmExports['sqlite3_db_name'])(a0, a1));\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = (a0, a1) =>\n      (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        wasmExports['sqlite3_db_filename'])(a0, a1));\n    var _sqlite3_db_readonly = (Module['_sqlite3_db_readonly'] = (a0, a1) =>\n      (_sqlite3_db_readonly = Module['_sqlite3_db_readonly'] =\n        wasmExports['sqlite3_db_readonly'])(a0, a1));\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_used = Module['_sqlite3_compileoption_used'] =\n        wasmExports['sqlite3_compileoption_used'])(a0));\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_get = Module['_sqlite3_compileoption_get'] =\n        wasmExports['sqlite3_compileoption_get'])(a0));\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        wasmExports['sqlite3session_diff'])(a0, a1, a2, a3));\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] = (a0, a1) =>\n      (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n        wasmExports['sqlite3session_attach'])(a0, a1));\n    var _sqlite3session_create = (Module['_sqlite3session_create'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_create = Module['_sqlite3session_create'] =\n        wasmExports['sqlite3session_create'])(a0, a1, a2));\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] = (a0) =>\n      (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n        wasmExports['sqlite3session_delete'])(a0));\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      (a0, a1, a2) =>\n        (_sqlite3session_table_filter = Module['_sqlite3session_table_filter'] =\n          wasmExports['sqlite3session_table_filter'])(a0, a1, a2));\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_changeset = Module['_sqlite3session_changeset'] =\n        wasmExports['sqlite3session_changeset'])(a0, a1, a2));\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        wasmExports['sqlite3session_changeset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_patchset_strm = Module['_sqlite3session_patchset_strm'] =\n        wasmExports['sqlite3session_patchset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n        wasmExports['sqlite3session_patchset'])(a0, a1, a2));\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] = (a0, a1) =>\n      (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n        wasmExports['sqlite3session_enable'])(a0, a1));\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n        wasmExports['sqlite3session_indirect'])(a0, a1));\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] = (a0) =>\n      (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n        wasmExports['sqlite3session_isempty'])(a0));\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] = (\n      a0,\n    ) =>\n      (_sqlite3session_memory_used = Module['_sqlite3session_memory_used'] =\n        wasmExports['sqlite3session_memory_used'])(a0));\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_object_config = Module['_sqlite3session_object_config'] =\n        wasmExports['sqlite3session_object_config'])(a0, a1, a2));\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = (a0) =>\n      (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        wasmExports['sqlite3session_changeset_size'])(a0));\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n        wasmExports['sqlite3changeset_start'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_start_v2 = Module['_sqlite3changeset_start_v2'] =\n        wasmExports['sqlite3changeset_start_v2'])(a0, a1, a2, a3));\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changeset_start_strm = Module['_sqlite3changeset_start_strm'] =\n          wasmExports['sqlite3changeset_start_strm'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_start_v2_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] = (a0) =>\n      (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n        wasmExports['sqlite3changeset_next'])(a0));\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        wasmExports['sqlite3changeset_op'])(a0, a1, a2, a3, a4));\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = (a0, a1, a2) =>\n      (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        wasmExports['sqlite3changeset_pk'])(a0, a1, a2));\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        wasmExports['sqlite3changeset_old'])(a0, a1, a2));\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        wasmExports['sqlite3changeset_new'])(a0, a1, a2));\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_conflict = Module['_sqlite3changeset_conflict'] =\n        wasmExports['sqlite3changeset_conflict'])(a0, a1, a2));\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = (a0, a1) =>\n      (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        wasmExports['sqlite3changeset_fk_conflicts'])(a0, a1));\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] = (\n      a0,\n    ) =>\n      (_sqlite3changeset_finalize = Module['_sqlite3changeset_finalize'] =\n        wasmExports['sqlite3changeset_finalize'])(a0));\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n        wasmExports['sqlite3changeset_invert'])(a0, a1, a2, a3));\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_invert_strm = Module['_sqlite3changeset_invert_strm'] =\n        wasmExports['sqlite3changeset_invert_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3changeset_apply_v2 = Module['_sqlite3changeset_apply_v2'] =\n        wasmExports['sqlite3changeset_apply_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n        wasmExports['sqlite3changeset_apply'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_apply_v2_strm'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3changeset_apply_strm = Module['_sqlite3changeset_apply_strm'] =\n          wasmExports['sqlite3changeset_apply_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] = (a0) =>\n      (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n        wasmExports['sqlite3changegroup_new'])(a0));\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n        wasmExports['sqlite3changegroup_add'])(a0, a1, a2));\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_output = Module['_sqlite3changegroup_output'] =\n        wasmExports['sqlite3changegroup_output'])(a0, a1, a2));\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changegroup_add_strm = Module['_sqlite3changegroup_add_strm'] =\n          wasmExports['sqlite3changegroup_add_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        wasmExports['sqlite3changegroup_output_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] = (\n      a0,\n    ) =>\n      (_sqlite3changegroup_delete = Module['_sqlite3changegroup_delete'] =\n        wasmExports['sqlite3changegroup_delete'])(a0));\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n        wasmExports['sqlite3changeset_concat'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = (a0, a1, a2, a3, a4, a5) =>\n      (_sqlite3changeset_concat_strm = Module['_sqlite3changeset_concat_strm'] =\n        wasmExports['sqlite3changeset_concat_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3session_config = (Module['_sqlite3session_config'] = (a0, a1) =>\n      (_sqlite3session_config = Module['_sqlite3session_config'] =\n        wasmExports['sqlite3session_config'])(a0, a1));\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = () =>\n      (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        wasmExports['sqlite3_sourceid'])());\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] = () =>\n      (_sqlite3__wasm_pstack_ptr = Module['_sqlite3__wasm_pstack_ptr'] =\n        wasmExports['sqlite3__wasm_pstack_ptr'])());\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = (a0) =>\n      (_sqlite3__wasm_pstack_restore = Module['_sqlite3__wasm_pstack_restore'] =\n        wasmExports['sqlite3__wasm_pstack_restore'])(a0));\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_pstack_alloc = Module['_sqlite3__wasm_pstack_alloc'] =\n        wasmExports['sqlite3__wasm_pstack_alloc'])(a0));\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = () =>\n      (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        wasmExports['sqlite3__wasm_pstack_remaining'])());\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      () =>\n        (_sqlite3__wasm_pstack_quota = Module['_sqlite3__wasm_pstack_quota'] =\n          wasmExports['sqlite3__wasm_pstack_quota'])());\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n        wasmExports['sqlite3__wasm_db_error'])(a0, a1, a2));\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_struct = Module['_sqlite3__wasm_test_struct'] =\n        wasmExports['sqlite3__wasm_test_struct'])(a0));\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] = () =>\n      (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n        wasmExports['sqlite3__wasm_enum_json'])());\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_vfs_unlink = Module['_sqlite3__wasm_vfs_unlink'] =\n        wasmExports['sqlite3__wasm_vfs_unlink'])(a0, a1));\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = (a0, a1) =>\n      (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        wasmExports['sqlite3__wasm_db_vfs'])(a0, a1));\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] = (a0) =>\n      (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n        wasmExports['sqlite3__wasm_db_reset'])(a0));\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        wasmExports['sqlite3__wasm_db_export_chunked'])(a0, a1));\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3__wasm_db_serialize = Module['_sqlite3__wasm_db_serialize'] =\n        wasmExports['sqlite3__wasm_db_serialize'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_vfs_create_file'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = (a0, a1, a2) =>\n      (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_posix_create_file'])(a0, a1, a2));\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        wasmExports['sqlite3__wasm_kvvfsMakeKeyOnPstack'])(a0, a1));\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      () =>\n        (_sqlite3__wasm_kvvfs_methods = Module['_sqlite3__wasm_kvvfs_methods'] =\n          wasmExports['sqlite3__wasm_kvvfs_methods'])());\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_vtab_config = Module['_sqlite3__wasm_vtab_config'] =\n        wasmExports['sqlite3__wasm_vtab_config'])(a0, a1, a2));\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3__wasm_db_config_ip = Module['_sqlite3__wasm_db_config_ip'] =\n        wasmExports['sqlite3__wasm_db_config_ip'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      (a0, a1, a2, a3, a4) =>\n        (_sqlite3__wasm_db_config_pii = Module['_sqlite3__wasm_db_config_pii'] =\n          wasmExports['sqlite3__wasm_db_config_pii'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_config_s = Module['_sqlite3__wasm_db_config_s'] =\n        wasmExports['sqlite3__wasm_db_config_s'])(a0, a1, a2));\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n        wasmExports['sqlite3__wasm_config_i'])(a0, a1));\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n        wasmExports['sqlite3__wasm_config_ii'])(a0, a1, a2));\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n        wasmExports['sqlite3__wasm_config_j'])(a0, a1));\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_qfmt_token = Module['_sqlite3__wasm_qfmt_token'] =\n        wasmExports['sqlite3__wasm_qfmt_token'])(a0, a1));\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_init_wasmfs = Module['_sqlite3__wasm_init_wasmfs'] =\n        wasmExports['sqlite3__wasm_init_wasmfs'])(a0));\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_intptr = Module['_sqlite3__wasm_test_intptr'] =\n        wasmExports['sqlite3__wasm_test_intptr'])(a0));\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_voidptr = Module['_sqlite3__wasm_test_voidptr'] =\n        wasmExports['sqlite3__wasm_test_voidptr'])(a0));\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_max = Module['_sqlite3__wasm_test_int64_max'] =\n        wasmExports['sqlite3__wasm_test_int64_max'])());\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_min = Module['_sqlite3__wasm_test_int64_min'] =\n        wasmExports['sqlite3__wasm_test_int64_min'])());\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_times2'])(a0));\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_minmax'])(a0, a1));\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      (a0) =>\n        (_sqlite3__wasm_test_int64ptr = Module['_sqlite3__wasm_test_int64ptr'] =\n          wasmExports['sqlite3__wasm_test_int64ptr'])(a0));\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        wasmExports['sqlite3__wasm_test_stack_overflow'])(a0));\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_str_hello = Module['_sqlite3__wasm_test_str_hello'] =\n        wasmExports['sqlite3__wasm_test_str_hello'])(a0));\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        wasmExports['sqlite3__wasm_SQLTester_strglob'])(a0, a1));\n    var _malloc = (Module['_malloc'] = (a0) =>\n      (_malloc = Module['_malloc'] = wasmExports['malloc'])(a0));\n    var _free = (Module['_free'] = (a0) =>\n      (_free = Module['_free'] = wasmExports['free'])(a0));\n    var _realloc = (Module['_realloc'] = (a0, a1) =>\n      (_realloc = Module['_realloc'] = wasmExports['realloc'])(a0, a1));\n    var _emscripten_builtin_memalign = (a0, a1) =>\n      (_emscripten_builtin_memalign =\n        wasmExports['emscripten_builtin_memalign'])(a0, a1);\n    var __emscripten_stack_restore = (a0) =>\n      (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(\n        a0,\n      );\n    var __emscripten_stack_alloc = (a0) =>\n      (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\n    var _emscripten_stack_get_current = () =>\n      (_emscripten_stack_get_current =\n        wasmExports['emscripten_stack_get_current'])();\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n    var calledPrerun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n\n      if (!calledPrerun) {\n        calledPrerun = 1;\n        preRun();\n\n        if (runDependencies > 0) {\n          return;\n        }\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = 1;\n        Module['calledRun'] = 1;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        Module['onRuntimeInitialized']?.();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(() => {\n          setTimeout(() => Module['setStatus'](''), 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    Module.runSQLite3PostLoadInit = function (EmscriptenModule) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE:\n            case capi.SQLITE_DBCONFIG_ENABLE_COMMENTS:\n              if (!this.ip) {\n                this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'int',\n                  '*',\n                ]);\n              }\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              if (!this.pii) {\n                this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n                  'sqlite3*',\n                  'int',\n                  '*',\n                  'int',\n                  'int',\n                ]);\n              }\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              if (!this.s) {\n                this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'string:static',\n                ]);\n              }\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                xcvPart.delete(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          ['sqlite3_bind_parameter_name', 'string', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_decltype', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_readonly', 'int', 'sqlite3*', 'string'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n          ['sqlite3_interrupt', undefined, 'sqlite3*'],\n          ['sqlite3_is_interrupted', 'int', 'sqlite3*'],\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              true\n                ? '*'\n                : new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xDestroyAuxData',\n                    signature: 'v(p)',\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_busy', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_readonly', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (!!wasm.exports.sqlite3_progress_handler) {\n          wasm.bindingSignatures.push([\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (!!wasm.exports.sqlite3_stmt_explain) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_stmt_explain', 'int', 'sqlite3_stmt*', 'int'],\n            ['sqlite3_stmt_isexplain', 'int', 'sqlite3_stmt*'],\n          );\n        }\n\n        if (!!wasm.exports.sqlite3_set_authorizer) {\n          wasm.bindingSignatures.push([\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_declare_vtab) {\n          wasm.bindingSignatures.int64.push(\n            [\n              'sqlite3_create_module',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n            ],\n            [\n              'sqlite3_create_module_v2',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n            ],\n            ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n            ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n            ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n            ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n            ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n            ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n            ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n            ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n            ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n            [\n              'sqlite3_vtab_rhs_value',\n              'int',\n              'sqlite3_index_info*',\n              'int',\n              '**',\n            ],\n          );\n        }\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_preupdate_hook) {\n          wasm.bindingSignatures.int64.push(\n            ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n            [\n              'sqlite3_preupdate_hook',\n              '*',\n              [\n                'sqlite3*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'sqlite3_preupdate_hook',\n                  signature: 'v(ppippjj)',\n                  contextKey: (argv) => argv[0],\n                  callProxy: (callback) => {\n                    return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                      callback(\n                        p,\n                        db,\n                        op,\n                        wasm.cstrToJs(zDb),\n                        wasm.cstrToJs(zTbl),\n                        iKey1,\n                        iKey2,\n                      );\n                    };\n                  },\n                }),\n                '*',\n              ],\n            ],\n            ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n            ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          );\n        }\n\n        if (\n          wasm.bigIntEnabled &&\n          !!wasm.exports.sqlite3changegroup_add &&\n          !!wasm.exports.sqlite3session_create &&\n          !!wasm.exports.sqlite3_preupdate_hook\n        ) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n          if (wasm.exports.sqlite3_declare_vtab) {\n            wasm.xWrap.argAdapter('sqlite3_index_info*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_index_info || nilType)\n                  ? v.pointer\n                  : v,\n              ),\n            )('sqlite3_module*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n              ),\n            );\n          }\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        if (wasm.exports.sqlite3_create_window_function) {\n          __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n            const m = __dbCleanupMap(pDb, 1);\n            if (!m.wudf) m.wudf = new Map();\n            this._addUDF(pDb, name, arity, m.wudf);\n          };\n        }\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            if (!x) {\n              continue;\n            }\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              sqlite3.config.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_create) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.exports\n            .sqlite3_create_window_function\n            ? wasm.xWrap('sqlite3_create_window_function', 'int', [\n                'sqlite3*',\n                'string',\n                'int',\n                'int',\n                '*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xStep',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xFinal',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xValue',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xInverse',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xDestroy',\n                  ...__cfProxy.xDestroy,\n                }),\n              ])\n            : undefined;\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          if (__sqlite3CreateWindowFunction) {\n            capi.sqlite3_create_window_function = function f(\n              pDb,\n              funcName,\n              nArg,\n              eTextRep,\n              pApp,\n              xStep,\n              xFinal,\n              xValue,\n              xInverse,\n              xDestroy,\n            ) {\n              if (f.length !== arguments.length) {\n                return __dbArgcMismatch(\n                  pDb,\n                  'sqlite3_create_window_function',\n                  f.length,\n                );\n              } else if (0 === (eTextRep & 0xf)) {\n                eTextRep |= capi.SQLITE_UTF8;\n              } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n                return __errEncoding(pDb);\n              }\n              try {\n                const rc = __sqlite3CreateWindowFunction(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xStep,\n                  xFinal,\n                  xValue,\n                  xInverse,\n                  xDestroy,\n                );\n                if (\n                  0 === rc &&\n                  (xStep instanceof Function ||\n                    xFinal instanceof Function ||\n                    xValue instanceof Function ||\n                    xInverse instanceof Function ||\n                    xDestroy instanceof Function)\n                ) {\n                  __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n                }\n                return rc;\n              } catch (e) {\n                console.error(\n                  'sqlite3_create_window_function() setup threw:',\n                  e,\n                );\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  e,\n                  'Creation of UDF threw: ' + e,\n                );\n              }\n            };\n          } else {\n            delete capi.sqlite3_create_window_function;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult = capi.sqlite3_result_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          }\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.49.1',\n          libVersionNumber: 3049001,\n          sourceId:\n            '2025-02-18 13:38:58 873d4e274b4988d260ba8354a9718324a1c26187a4ab4c1cc0227c03d0f10e70',\n          downloadVersion: 3490100,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenCallback = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenCallback[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenCallback = function (pVfs, callback) {\n          if (!(callback instanceof Function)) {\n            toss3(\n              'dbCtorHelper.setVfsPostOpenCallback() should not be used with ' +\n                'a non-function argument.',\n              arguments,\n            );\n          }\n          __vfsPostOpenCallback[pVfs] = callback;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n\n          getParamName: function (ndx) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_name(this.pointer, ndx)\n              : undefined;\n          },\n\n          isBusy: function () {\n            return 0 !== capi.sqlite3_stmt_busy(affirmStmtOpen(this));\n          },\n\n          isReadOnly: function () {\n            return 0 !== capi.sqlite3_stmt_readonly(affirmStmtOpen(this));\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        if (!sqlite3.wasm.exports.sqlite3_declare_vtab) {\n          return;\n        }\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_CANTOPEN',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              while (\n                'not-equal' !==\n                Atomics.wait(state.sabOPView, state.opIds.rc, -1)\n              ) {}\n\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                wasm.poke(pOut, 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                fh.readOnly =\n                  !(sqlite3.SQLITE_OPEN_CREATE & flags) &&\n                  !!(flags & capi.SQLITE_OPEN_READONLY);\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenCallback(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n          forceReinitIfPreviouslyFailed: false,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            delete initPromises[this.vfsName];\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          options = Object.assign(\n            Object.create(null),\n            optionDefaults,\n            options || {},\n          );\n          const vfsName = options.name;\n          if (options.$testThrowPhase1) {\n            throw options.$testThrowPhase1;\n          }\n          if (initPromises[vfsName]) {\n            try {\n              const p = await initPromises[vfsName];\n\n              return p;\n            } catch (e) {\n              if (options.forceReinitIfPreviouslyFailed) {\n                delete initPromises[vfsName];\n              } else {\n                throw e;\n              }\n            }\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowPhase2) {\n                throw options.$testThrowPhase2;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    };\n\n    moduleRtn = readyPromise;\n\n    return moduleRtn;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        EmscriptenModule.runSQLite3PostLoadInit(EmscriptenModule);\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        const rv = f();\n        return rv;\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  let promiserFunc;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready(promiserFunc);\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return (promiserFunc = function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  });\n};\n\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\nsqlite3Worker1Promiser.v2 = function (config) {\n  let oldFunc;\n  if ('function' == typeof config) {\n    oldFunc = config;\n    config = {};\n  } else if ('function' === typeof config?.onready) {\n    oldFunc = config.onready;\n    delete config.onready;\n  }\n  const promiseProxy = Object.create(null);\n  config = Object.assign(config || Object.create(null), {\n    onready: async function (func) {\n      try {\n        if (oldFunc) await oldFunc(func);\n        promiseProxy.resolve(func);\n      } catch (e) {\n        promiseProxy.reject(e);\n      }\n    },\n  });\n  const p = new Promise(function (resolve, reject) {\n    promiseProxy.resolve = resolve;\n    promiseProxy.reject = reject;\n  });\n  try {\n    this.original(config);\n  } catch (e) {\n    promiseProxy.reject(e);\n  }\n  return p;\n}.bind({\n  original: sqlite3Worker1Promiser,\n});\n\nexport default sqlite3Worker1Promiser.v2;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs';\n\nconst sqlite3Worker1Promiser = globalThis.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n","/** @jsx h */\nimport { h, render } from 'preact';\nimport { Toolbar } from './components/Toolbar';\nimport { initGemini } from './gemini/gemini';\n\ninterface ReactLLMGlobal {\n  init: (apiKey: string) => void;\n}\n\ndeclare global {\n  interface Window {\n    ReactLLM: ReactLLMGlobal;\n  }\n}\n\nconst init = async (apiKey: string) => {\n  try {\n    // Create container with shadow DOM\n    const container = document.createElement('div');\n    container.id = 'react-llm-root';\n    document.body.appendChild(container);\n\n    // Create shadow root\n    const shadow = container.attachShadow({ mode: 'open' });\n    const root = document.createElement('div');\n    shadow.appendChild(root);\n\n    // Initialize Gemini\n    await initGemini({ apiKey });\n\n    // Render Toolbar in shadow DOM\n    render(h(Toolbar, {}), root);\n    \n    console.log('React-LLM initialized successfully');\n  } catch (error) {\n    console.error('Failed to initialize React-LLM:', error);\n    throw error;\n  }\n};\n\n// Explicitly set up global object\nwindow.ReactLLM = {\n  init\n};\n\nexport { init };\n","/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n","import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor === UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original === NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === NULL ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original == oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\ttmp.props.children = NULL;\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType === NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type === 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue !== UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== UNDEFINED && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps !== UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n","import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// An named symbol/brand for detecting Signal instances even when they weren't\n// created using the same signals library version.\nconst BRAND_SYMBOL = Symbol.for(\"preact-signals\");\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * Combine multiple value updates into one \"commit\" at the end of the provided callback.\n *\n * Batches can be nested and changes are only flushed once the outermost batch callback\n * completes.\n *\n * Accessing a signal that has been modified within a batch will reflect its updated\n * value.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction batch<T>(fn: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn fn();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n/**\n * Run a callback function that can access signal values without\n * subscribing to the signal updates.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction untracked<T>(fn: () => T): T {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n}\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n/**\n * The base class for plain and computed signals.\n */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A function with the same name is defined later, so we need to ignore TypeScript's\n// warning about a redeclared variable.\n//\n// The class is declared here, but later implemented with ES5-style prototypes.\n// This enables better control of the transpiled output size.\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tbrand: typeof BRAND_SYMBOL;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A class with the same name has already been declared, so we need to ignore\n// TypeScript's warning about a redeclared variable.\n//\n// The previously declared class is implemented here with ES5-style prototypes.\n// This enables better control of the transpiled output size.\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype.brand = BRAND_SYMBOL;\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\treturn effect(() => {\n\t\tconst value = this.value;\n\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn this.value;\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget(this: Signal) {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\n/**\n * Create a new plain signal.\n *\n * @param value The initial value for the signal.\n * @returns A new signal.\n */\nexport function signal<T>(value: T): Signal<T>;\nexport function signal<T = undefined>(): Signal<T | undefined>;\nexport function signal<T>(value?: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_fn: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(fn: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, fn: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._fn = fn;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._fn();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget(this: Computed) {\n\t\tif (this._flags & RUNNING) {\n\t\t\tthrow new Error(\"Cycle detected\");\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\n/**\n * An interface for read-only signals.\n */\ninterface ReadonlySignal<T = any> {\n\treadonly value: T;\n\tpeek(): T;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\tvalueOf(): T;\n\ttoString(): string;\n\ttoJSON(): T;\n\tbrand: typeof BRAND_SYMBOL;\n}\n\n/**\n * Create a new signal that is computed based on the values of other signals.\n *\n * The returned computed signal is read-only, and its value is automatically\n * updated when any signals accessed from within the callback function change.\n *\n * @param fn The effect callback.\n * @returns A new read-only signal.\n */\nfunction computed<T>(fn: () => T): ReadonlySignal<T> {\n\treturn new Computed(fn);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._fn = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ntype EffectFn = () => void | (() => void);\n\ndeclare class Effect {\n\t_fn?: EffectFn;\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(fn: EffectFn);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, fn: EffectFn) {\n\tthis._fn = fn;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._fn === undefined) return;\n\n\t\tconst cleanup = this._fn();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tthrow new Error(\"Cycle detected\");\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\n/**\n * Create an effect to run arbitrary code in response to signal changes.\n *\n * An effect tracks which signals are accessed within the given callback\n * function `fn`, and re-runs the callback when those signals change.\n *\n * The callback may return a cleanup function. The cleanup function gets\n * run once, either when the callback is next called or when the effect\n * gets disposed, whichever happens first.\n *\n * @param fn The effect callback.\n * @returns A function for disposing the effect.\n */\nfunction effect(fn: EffectFn): () => void {\n\tconst effect = new Effect(fn);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { computed, effect, batch, untracked, Signal, ReadonlySignal };\n","import { options, Component, isValidElement } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n};\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction SignalValue(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._updater!._callback = () => {\n\t\t\tconst end = this._updater!._start();\n\t\t\tconst value = s.value;\n\t\t\tend();\n\n\t\t\tif (isValidElement(value) || this.base?.nodeType !== 3) {\n\t\t\t\tthis._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tthis.setState({});\n\t\t\t} else {\n\t\t\t\t(this.base as Text).data = value;\n\t\t\t}\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nSignalValue.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: SignalValue },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3 || type === 9)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\tif (this.__f || (typeof this.u == \"boolean\" && this.u === true)) {\n\t\tconst hasHooksState = this._updateFlags & HAS_HOOK_STATE;\n\t\t// if this component used no signals or computeds and no hooks state, update:\n\t\tif (!hasSignals && !hasHooksState && !(this._updateFlags & HAS_COMPUTEDS))\n\t\t\treturn true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & HAS_PENDING_UPDATE) return true;\n\t} else {\n\t\t// if this component used no signals or computeds, update:\n\t\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\t}\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T): Signal<T>;\nexport function useSignal<T = undefined>(): Signal<T | undefined>;\nexport function useSignal<T>(value?: T) {\n\treturn useMemo(() => signal<T | undefined>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    // Threshold is unspecified.\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    // Content with NEGLIGIBLE will be allowed.\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    // Content with NEGLIGIBLE and LOW will be allowed.\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    // All content will be allowed.\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    // Probability is unspecified.\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    // Content has a negligible chance of being unsafe.\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    // Content has a low chance of being unsafe.\n    HarmProbability[\"LOW\"] = \"LOW\";\n    // Content has a medium chance of being unsafe.\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    // Content has a high chance of being unsafe.\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst API_VERSION = \"v1\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.2.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n    }\n    toString() {\n        let url = `${BASE_URL}/${API_VERSION}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders() {\n    return `${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`;\n}\nasync function makeRequest(url, body, requestOptions) {\n    let response;\n    try {\n        response = await fetch(url.toString(), Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-goog-api-client\": getClientHeaders(),\n                \"x-goog-api-key\": url.apiKey,\n            }, body }));\n        if (!response.ok) {\n            let message = \"\";\n            try {\n                const json = await response.json();\n                message = json.error.message;\n                if (json.error.details) {\n                    message += ` ${JSON.stringify(json.error.details)}`;\n                }\n            }\n            catch (e) {\n                // ignored\n            }\n            throw new Error(`[${response.status} ${response.statusText}] ${message}`);\n        }\n    }\n    catch (e) {\n        const err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n        throw err;\n    }\n    return response;\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n        setTimeout(() => abortController.abort(), requestOptions.timeout);\n        fetchOptions.signal = signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    return response;\n}\n/**\n * Returns text of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    if ((_d = (_c = (_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.text) {\n        return response.candidates[0].content.parts[0].text;\n    }\n    else {\n        return \"\";\n    }\n}\nconst badFinishReasons = [FinishReason.RECITATION, FinishReason.SAFETY];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader.read().then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            for (const candidate of response.candidates) {\n                const i = candidate.index;\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[i]) {\n                    aggregatedResponse.candidates[i] = {\n                        index: candidate.index,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[i].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n                aggregatedResponse.candidates[i].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[i].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[i].content) {\n                        aggregatedResponse.candidates[i].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [{ text: \"\" }],\n                        };\n                    }\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            aggregatedResponse.candidates[i].content.parts[0].text +=\n                                part.text;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true);\n    const response = await makeRequest(url, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false);\n    const response = await makeRequest(url, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatNewContent(request, role) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return { role, parts: newParts };\n}\nfunction formatGenerateContentInput(params) {\n    if (params.contents) {\n        return params;\n    }\n    else {\n        const content = formatNewContent(params, \"user\");\n        return { contents: [content] };\n    }\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params, \"user\");\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, requestOptions) {\n        this.model = model;\n        this.params = params;\n        this.requestOptions = requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            this._history = params.history.map((content) => {\n                if (!content.role) {\n                    throw new Error(\"Missing role for history item: \" + JSON.stringify(content));\n                }\n                return formatNewContent(content.parts, content.role);\n            });\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}\n     */\n    async sendMessage(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, this.requestOptions))\n            .then((result) => {\n            var _a;\n            if (result.response.candidates &&\n                result.response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     */\n    async sendMessageStream(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, this.requestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (response.candidates && response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.COUNT_TOKENS, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(Object.assign(Object.assign({}, params), { model })), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.EMBED_CONTENT, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.BATCH_EMBED_CONTENTS, apiKey, false);\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeRequest(url, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, requestOptions) {\n        this.apiKey = apiKey;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.requestOptions = requestOptions || {};\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     */\n    async generateContent(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams), this.requestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model\n     * and returns an object containing an iterable stream that iterates\n     * over all chunks in the streaming response as well as\n     * a promise that returns the final aggregated response.\n     */\n    async generateContentStream(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams), this.requestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        return new ChatSession(this.apiKey, this.model, startChatParams, this.requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     */\n    async countTokens(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return countTokens(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds the provided content.\n     */\n    async embedContent(request) {\n        const formattedParams = formatEmbedContentInput(request);\n        return embedContent(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     */\n    async batchEmbedContents(batchEmbedContentRequest) {\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, this.requestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n}\n\nexport { BlockReason, ChatSession, FinishReason, GenerativeModel, GoogleGenerativeAI, HarmBlockThreshold, HarmCategory, HarmProbability, TaskType };\n//# sourceMappingURL=index.mjs.map\n","import { GoogleGenerativeAI } from '@google/generative-ai';\n\nlet geminiClient: GoogleGenerativeAI | null = null;\nlet codebaseContext: string | null = null;\nlet initialResponse: StructuredResponse | null = null;\n\ninterface RelevantFile {\n  path: string;\n  reason: string;\n  type: 'core' | 'config' | 'component' | 'util' | 'test' | 'other';\n  snippet?: string;\n}\n\ninterface DocumentationLink {\n  url: string;\n  title: string;\n  description: string;\n}\n\nexport interface StructuredResponse {\n  markdown: string;\n  chatTitle?: string;\n  relevantFiles: RelevantFile[];\n  documentationLinks: DocumentationLink[];\n  suggestedQueries?: string[];\n  projectInfo?: {\n    name: string;\n    type: string;\n    mainTechnologies: string[];\n    description: string;\n  };\n}\n\nconst CACHE_KEY = 'react-llm-initial-analysis';\nconst DEBUG = true;\n\nfunction debugLog(type: string, data: any) {\n  if (!DEBUG) return;\n  console.log(`[react-llm ${type}]`, JSON.stringify(data, null, 2));\n}\n\n// Load codebase context from public directory\nasync function loadCodebaseContext() {\n  try {\n    // Only try to load context if we're in a browser environment\n    if (typeof window === 'undefined') return null;\n\n    const response = await fetch('/codebase-context.json');\n    if (!response.ok) {\n      console.warn('Codebase context not found');\n      return null;\n    }\n    const data = await response.json();\n    return data.context;\n  } catch (error) {\n    console.warn('Failed to load codebase context:', error);\n    return null;\n  }\n}\n\nexport interface GeminiConfig {\n  apiKey: string;\n}\n\nexport const initGemini = async (config: GeminiConfig) => {\n  const apiKey = config.apiKey;\n  if (!apiKey || apiKey.trim() === '') {\n    throw new Error('Gemini API key is required');\n  }\n\n  try {\n    // Initialize the client\n    geminiClient = new GoogleGenerativeAI(apiKey);\n    \n    // Try to load from cache first\n    const cached = localStorage.getItem(CACHE_KEY);\n    if (cached) {\n      try {\n        initialResponse = JSON.parse(cached);\n        debugLog('cache-hit', { initialResponse });\n        return geminiClient;\n      } catch (e) {\n        console.warn('Failed to parse cached response:', e);\n        localStorage.removeItem(CACHE_KEY);\n      }\n    }\n    \n    // If no cache, load context and get initial analysis\n    try {\n      codebaseContext = await loadCodebaseContext();\n      if (codebaseContext) {\n        debugLog('context-loaded', { contextLength: codebaseContext.length });\n        \n        // Get initial analysis\n        initialResponse = await getInitialAnalysis();\n        if (initialResponse) {\n          debugLog('initial-analysis', { initialResponse });\n          // Cache the response\n          localStorage.setItem(CACHE_KEY, JSON.stringify(initialResponse));\n        }\n      }\n    } catch (contextError) {\n      console.warn('Failed to load codebase context:', contextError);\n    }\n    \n    return geminiClient;\n  } catch (error) {\n    console.error('Failed to initialize Gemini client:', error);\n    throw error;\n  }\n};\n\nexport const getInitialResponse = () => {\n  if (!initialResponse) {\n    const cached = localStorage.getItem(CACHE_KEY);\n    if (cached) {\n      try {\n        initialResponse = JSON.parse(cached);\n        debugLog('cache-hit-lazy', { initialResponse });\n      } catch (e) {\n        console.warn('Failed to parse cached response:', e);\n        localStorage.removeItem(CACHE_KEY);\n      }\n    }\n  }\n  return initialResponse;\n};\n\nasync function getInitialAnalysis(): Promise<StructuredResponse | null> {\n  if (!geminiClient || !codebaseContext) return null;\n\n  try {\n    const model = geminiClient.getGenerativeModel({ model: 'gemini-2.0-flash-001' });\n    \n    const prompt = `You are a helpful AI assistant for developers. Please analyze this codebase and provide a comprehensive initial response.\n\nHere is the context of the codebase:\n\n${codebaseContext}\n\nPlease provide:\n1. A clear project name and description\n2. List of core files and their purposes\n3. Relevant documentation links\n4. Suggested initial queries\n\nStructure your response in JSON format:\n{\n  \"projectInfo\": {\n    \"name\": \"Project name\",\n    \"type\": \"Type of project\",\n    \"mainTechnologies\": [\"tech1\", \"tech2\"],\n    \"description\": \"Brief description\"\n  },\n  \"relevantFiles\": [\n    {\n      \"path\": \"src/components/Example.tsx\",\n      \"reason\": \"Main component that handles...\",\n      \"type\": \"component\"\n    }\n  ],\n  \"documentationLinks\": [\n    {\n      \"url\": \"https://example.com\",\n      \"title\": \"Relevant Documentation\",\n      \"description\": \"Official docs for...\"\n    }\n  ],\n  \"suggestedQueries\": [\n    \"How do I...\",\n    \"What is the purpose of...\"\n  ]\n}`;\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text();\n    \n    try {\n      const jsonStr = text.split(/```json|```/g)[1]?.trim();\n      if (!jsonStr) throw new Error('No JSON found in response');\n      \n      const data = JSON.parse(jsonStr);\n      return {\n        markdown: text.split(/```json|```/g)[0].trim(),\n        chatTitle: undefined,\n        relevantFiles: data.relevantFiles || [],\n        documentationLinks: data.documentationLinks || [],\n        suggestedQueries: data.suggestedQueries || [],\n        projectInfo: data.projectInfo\n      };\n    } catch (e) {\n      console.warn('Failed to parse initial analysis:', e);\n      return null;\n    }\n  } catch (error) {\n    console.error('Failed to get initial analysis:', error);\n    return null;\n  }\n}\n\nexport const getGeminiClient = () => {\n  if (!geminiClient) {\n    throw new Error('Gemini client not initialized. Call initGemini first.');\n  }\n  return geminiClient;\n};\n\nexport async function sendMessageToGemini(message: string, isNewChat: boolean = false): Promise<StructuredResponse> {\n  debugLog('message-input', { message, isNewChat });\n  \n  // If this is a new chat and we have an initial response, use that\n  if (isNewChat) {\n    const initial = getInitialResponse();\n    if (initial) {\n      debugLog('using-cached-initial', { initial });\n      return initial;\n    }\n  }\n\n  const client = getGeminiClient();\n  \n  try {\n    const model = client.getGenerativeModel({ model: 'gemini-2.0-flash-001' });\n    \n    const prompt = `You are a helpful AI assistant for developers. Please provide responses in markdown format.\n    \n${isNewChat ? `This is a new chat session. Please analyze the codebase thoroughly and provide a comprehensive initial response.\nIf this is a question about the codebase, please suggest a title for this chat session.` : ''}\n\nWhen analyzing code or responding to queries:\n1. Identify core files and their purposes\n2. Find relevant documentation links using web search\n3. Categorize files by type (core, config, component, util, test, other)\n4. For new chat sessions, provide project information\n5. Suggest follow-up queries when appropriate\n\n${codebaseContext ? 'Here is the context of the codebase:\\n\\n' + codebaseContext + '\\n\\n' : ''}\n\nPlease structure your response in JSON format after your markdown explanation:\n{\n  \"chatTitle\": \"Suggested title for this chat\",\n  \"relevantFiles\": [\n    {\n      \"path\": \"src/components/Example.tsx\",\n      \"reason\": \"Main component that handles...\",\n      \"type\": \"component\"\n    }\n  ],\n  \"documentationLinks\": [\n    {\n      \"url\": \"https://example.com\",\n      \"title\": \"Relevant Documentation\",\n      \"description\": \"Official docs for...\"\n    }\n  ],\n  \"projectInfo\": {\n    \"name\": \"Project name\",\n    \"type\": \"Type of project\",\n    \"mainTechnologies\": [\"tech1\", \"tech2\"],\n    \"description\": \"Brief description\"\n  },\n  \"suggestedQueries\": [\n    \"How do I...\",\n    \"What is the purpose of...\"\n  ]\n}\n\nUser: ${message}`;\n\n    debugLog('prompt', { prompt });\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text();\n    debugLog('llm-response', { text });\n    \n    // Split response into markdown and JSON parts\n    const [markdown, jsonStr] = text.split(/```json|```/g).map(s => s.trim());\n    \n    try {\n      const structuredData = jsonStr ? JSON.parse(jsonStr) : {};\n      const finalResponse = {\n        markdown,\n        chatTitle: structuredData.chatTitle,\n        relevantFiles: structuredData.relevantFiles || [],\n        documentationLinks: structuredData.documentationLinks || [],\n        suggestedQueries: structuredData.suggestedQueries,\n        projectInfo: structuredData.projectInfo\n      };\n      \n      // Cache initial response if this is a new chat\n      if (isNewChat) {\n        initialResponse = finalResponse;\n        localStorage.setItem(CACHE_KEY, JSON.stringify(finalResponse));\n      }\n      \n      debugLog('structured-response', { finalResponse });\n      return finalResponse;\n    } catch (e) {\n      console.warn('Failed to parse structured data:', e);\n      const fallbackResponse = {\n        markdown,\n        relevantFiles: [],\n        documentationLinks: []\n      };\n      debugLog('fallback-response', { fallbackResponse });\n      return fallbackResponse;\n    }\n  } catch (error) {\n    console.error('Failed to send message to Gemini:', error);\n    throw error;\n  }\n}\n","/**\n * Gets the original marked default options.\n */\nexport function _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nexport let _defaults = _getDefaults();\nexport function changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nexport function escape(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nexport function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nexport function edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nexport function cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nexport const noopTest = { exec: () => null };\nexport function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nexport function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n","import { _defaults } from './defaults.ts';\nimport { rtrim, splitCells, escape, findClosingBracket } from './helpers.ts';\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (const header of headers) {\n            item.header.push({\n                text: header,\n                tokens: this.lexer.inline(header)\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map(cell => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell)\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n","import { edit, noopTest } from './helpers.ts';\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nconst _comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}$+<=>`^|~';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nexport const block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nexport const inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n","import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { block, inline } from './rules.ts';\n/**\n * Block Lexer\n */\nexport class _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { cleanUrl, escape } from './helpers.ts';\n/**\n * Renderer\n */\nexport class _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(lang)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n","import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\nimport { unescape } from './helpers.ts';\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n","import { _defaults } from './defaults.ts';\nexport class _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n}\n","import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nexport class Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n","import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport { _getDefaults, changeDefaults, _defaults } from './defaults.ts';\nconst markedInstance = new Marked();\nexport function marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\n","export const schema = `\n-- Chat sessions table with project info fields\nCREATE TABLE IF NOT EXISTS chat_sessions (\n  id TEXT PRIMARY KEY,\n  title TEXT NOT NULL,\n  created_at INTEGER NOT NULL,\n  project_name TEXT,\n  project_type TEXT,\n  project_description TEXT,\n  is_active BOOLEAN DEFAULT 1\n);\n\n-- Project technologies junction table\nCREATE TABLE IF NOT EXISTS project_technologies (\n  chat_session_id TEXT NOT NULL,\n  technology TEXT NOT NULL,\n  PRIMARY KEY (chat_session_id, technology),\n  FOREIGN KEY (chat_session_id) REFERENCES chat_sessions(id) ON DELETE CASCADE\n);\n\n-- Messages table\nCREATE TABLE IF NOT EXISTS messages (\n  id TEXT PRIMARY KEY,\n  chat_session_id TEXT NOT NULL,\n  role TEXT CHECK(role IN ('user', 'assistant')) NOT NULL,\n  content TEXT NOT NULL,\n  timestamp INTEGER NOT NULL,\n  FOREIGN KEY (chat_session_id) REFERENCES chat_sessions(id) ON DELETE CASCADE\n);\n\n-- Relevant files table\nCREATE TABLE IF NOT EXISTS relevant_files (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  message_id TEXT NOT NULL,\n  path TEXT NOT NULL,\n  reason TEXT,\n  file_type TEXT CHECK(file_type IN ('core', 'config', 'component', 'util', 'test', 'other', 'page', 'api-route', 'class', 'store', 'external-script', 'layout', 'module')) NOT NULL,\n  snippet TEXT,\n  FOREIGN KEY (message_id) REFERENCES messages(id) ON DELETE CASCADE\n);\n\n-- Documentation links table\nCREATE TABLE IF NOT EXISTS documentation_links (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  message_id TEXT NOT NULL,\n  url TEXT NOT NULL,\n  title TEXT NOT NULL,\n  description TEXT,\n  FOREIGN KEY (message_id) REFERENCES messages(id) ON DELETE CASCADE\n);\n\n-- Suggested queries table\nCREATE TABLE IF NOT EXISTS suggested_queries (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  message_id TEXT NOT NULL,\n  query TEXT NOT NULL,\n  FOREIGN KEY (message_id) REFERENCES messages(id) ON DELETE CASCADE\n);\n\n-- Create indexes for common queries\nCREATE INDEX IF NOT EXISTS idx_messages_chat_session_id ON messages(chat_session_id);\nCREATE INDEX IF NOT EXISTS idx_messages_timestamp ON messages(timestamp);\nCREATE INDEX IF NOT EXISTS idx_relevant_files_message_id ON relevant_files(message_id);\nCREATE INDEX IF NOT EXISTS idx_documentation_links_message_id ON documentation_links(message_id);\nCREATE INDEX IF NOT EXISTS idx_suggested_queries_message_id ON suggested_queries(message_id);\nCREATE INDEX IF NOT EXISTS idx_project_technologies_chat_session_id ON project_technologies(chat_session_id);\n`; ","import { schema } from './schema';\nimport type { Database, SqlValue } from '@sqlite.org/sqlite-wasm';\nimport type { StructuredResponse } from '../gemini/gemini';\n\nlet db: Database | null = null;\n\n// @ts-ignore - __PUBLIC_PATH__ is defined in the bundle\ndeclare const __PUBLIC_PATH__: string;\n\ninterface ChatSession {\n  id: string;\n  title: string;\n  createdAt: number;\n  projectName?: string;\n  projectType?: string;\n  projectDescription?: string;\n  isActive: boolean;\n  technologies: string[];\n}\n\ninterface ChatMessage {\n  id: string;\n  chatSessionId: string;\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: number;\n  structuredResponse?: string;\n  relevantFiles: RelevantFile[];\n  documentationLinks: DocumentationLink[];\n  suggestedQueries: SuggestedQuery[];\n}\n\ninterface RelevantFile {\n  id: number;\n  messageId: string;\n  path: string;\n  reason?: string;\n  fileType: 'core' | 'config' | 'component' | 'util' | 'test' | 'other' | 'page' | 'api-route' | 'class' | 'store' | 'external-script' | 'layout' | 'module';\n  snippet?: string;\n}\n\ninterface DocumentationLink {\n  id: number;\n  messageId: string;\n  url: string;\n  title: string;\n  description?: string;\n}\n\ninterface SuggestedQuery {\n  id: number;\n  messageId: string;\n  query: string;\n}\n\nexport async function initDB() {\n  if (db) return db;\n\n  try {\n    // Initialize wa-sqlite with correct WASM path\n    const sqlite3 = await import('@sqlite.org/sqlite-wasm');\n    const sqlite = await sqlite3.default({\n      locateFile: (file: string) => __PUBLIC_PATH__ + file\n    });\n    \n    if (!sqlite?.oo1) {\n      throw new Error('SQLite initialization failed: oo1 not available');\n    }\n\n    try {\n      // Try OPFS first\n      if (sqlite.oo1.OpfsDb) {\n        console.log('[ReactLLM] Using OPFS for persistence');\n        const dbPath = '/react-llm.sqlite3';\n        db = new sqlite.oo1.OpfsDb(dbPath);\n      } else {\n        // Fall back to in-memory database\n        console.log('[ReactLLM] OPFS not available, using in-memory database');\n        db = new sqlite.oo1.DB('/react-llm.sqlite3', 'ct');\n      }\n    } catch (e) {\n      console.warn('[ReactLLM] Failed to initialize OPFS, falling back to in-memory database:', e);\n      db = new sqlite.oo1.DB('/react-llm.sqlite3', 'ct');\n    }\n\n    // Create tables\n    if (!db) throw new Error('Database initialization failed');\n    await db.exec({ sql: schema });\n    console.log('[ReactLLM] Database initialized successfully');\n    return db;\n  } catch (error) {\n    console.error('Failed to initialize database:', error);\n    throw error;\n  }\n}\n\nexport async function createChatSession(\n  id: string,\n  title: string,\n  projectInfo?: StructuredResponse['projectInfo']\n) {\n  const dbInstance = await initDB();\n  if (!dbInstance) throw new Error('Database not initialized');\n  \n  await dbInstance.exec({\n    sql: `INSERT INTO chat_sessions \n          (id, title, created_at, project_name, project_type, project_description) \n          VALUES (?, ?, ?, ?, ?, ?)`,\n    bind: [\n      id,\n      title,\n      Date.now(),\n      projectInfo?.name || null,\n      projectInfo?.type || null,\n      projectInfo?.description || null\n    ],\n  });\n\n  // Insert technologies if they exist\n  if (projectInfo?.mainTechnologies?.length) {\n    const techValues = projectInfo.mainTechnologies\n      .map(() => '(?, ?)')\n      .join(',');\n    \n    const techBindings = projectInfo.mainTechnologies.flatMap(tech => [id, tech]);\n    \n    await dbInstance.exec({\n      sql: `INSERT INTO project_technologies (chat_session_id, technology) VALUES ${techValues}`,\n      bind: techBindings,\n    });\n  }\n}\n\nexport async function createMessage(\n  id: string,\n  chatSessionId: string,\n  role: 'user' | 'assistant',\n  content: string,\n  structuredResponse?: string\n) {\n  const dbInstance = await initDB();\n  if (!dbInstance) throw new Error('Database not initialized');\n\n  // Insert the message\n  await dbInstance.exec({\n    sql: 'INSERT INTO messages (id, chat_session_id, role, content, timestamp) VALUES (?, ?, ?, ?, ?)',\n    bind: [id, chatSessionId, role, content, Date.now()],\n  });\n\n  // If we have a structured response, parse and store its components\n  if (structuredResponse) {\n    try {\n      const parsed = JSON.parse(structuredResponse) as StructuredResponse;\n\n      // Insert relevant files\n      if (parsed.relevantFiles?.length) {\n        const fileValues = parsed.relevantFiles\n          .map(() => '(?, ?, ?, ?, ?)')\n          .join(',');\n        \n        const fileBindings = parsed.relevantFiles.flatMap(file => [\n          id,\n          file.path,\n          file.reason || null,\n          file.type,\n          file.snippet || null\n        ]);\n\n        await dbInstance.exec({\n          sql: `INSERT INTO relevant_files (message_id, path, reason, file_type, snippet) \n                VALUES ${fileValues}`,\n          bind: fileBindings,\n        });\n      }\n\n      // Insert documentation links\n      if (parsed.documentationLinks?.length) {\n        const linkValues = parsed.documentationLinks\n          .map(() => '(?, ?, ?, ?)')\n          .join(',');\n        \n        const linkBindings = parsed.documentationLinks.flatMap(link => [\n          id,\n          link.url,\n          link.title,\n          link.description || null\n        ]);\n\n        await dbInstance.exec({\n          sql: `INSERT INTO documentation_links (message_id, url, title, description) \n                VALUES ${linkValues}`,\n          bind: linkBindings,\n        });\n      }\n\n      // Insert suggested queries\n      if (parsed.suggestedQueries?.length) {\n        const queryValues = parsed.suggestedQueries\n          .map(() => '(?, ?)')\n          .join(',');\n        \n        const queryBindings = parsed.suggestedQueries.flatMap(query => [id, query]);\n\n        await dbInstance.exec({\n          sql: `INSERT INTO suggested_queries (message_id, query) VALUES ${queryValues}`,\n          bind: queryBindings,\n        });\n      }\n    } catch (error) {\n      console.warn('Failed to parse structured response:', error);\n    }\n  }\n}\n\nexport async function getChatSessions(): Promise<ChatSession[]> {\n  const dbInstance = await initDB();\n  if (!dbInstance) throw new Error('Database not initialized');\n\n  const sessions: Record<string, ChatSession> = {};\n\n  // Get chat sessions\n  await dbInstance.exec({\n    sql: `SELECT cs.*, GROUP_CONCAT(pt.technology) as technologies\n          FROM chat_sessions cs\n          LEFT JOIN project_technologies pt ON cs.id = pt.chat_session_id\n          WHERE cs.is_active = 1\n          GROUP BY cs.id\n          ORDER BY cs.created_at DESC`,\n    callback: (row: SqlValue[]) => {\n      if (row[0]) {\n        const id = String(row[0]);\n        sessions[id] = {\n          id,\n          title: String(row[1]),\n          createdAt: Number(row[2]),\n          projectName: row[3] ? String(row[3]) : undefined,\n          projectType: row[4] ? String(row[4]) : undefined,\n          projectDescription: row[5] ? String(row[5]) : undefined,\n          isActive: Boolean(row[6]),\n          technologies: row[7] ? String(row[7]).split(',') : []\n        };\n      }\n    },\n  });\n\n  return Object.values(sessions);\n}\n\nexport async function getMessagesForChatSession(chatSessionId: string): Promise<ChatMessage[]> {\n  const dbInstance = await initDB();\n  if (!dbInstance) throw new Error('Database not initialized');\n\n  const messages: Record<string, ChatMessage> = {};\n\n  // Get messages\n  await dbInstance.exec({\n    sql: 'SELECT * FROM messages WHERE chat_session_id = ? ORDER BY timestamp ASC',\n    bind: [chatSessionId],\n    callback: (row: SqlValue[]) => {\n      if (row[0]) {\n        const id = String(row[0]);\n        messages[id] = {\n          id,\n          chatSessionId: String(row[1]),\n          role: String(row[2]) as 'user' | 'assistant',\n          content: String(row[3]),\n          timestamp: Number(row[4]),\n          structuredResponse: row[5] ? String(row[5]) : undefined,\n          relevantFiles: [],\n          documentationLinks: [],\n          suggestedQueries: []\n        };\n      }\n    },\n  });\n\n  // Get relevant files\n  await dbInstance.exec({\n    sql: `SELECT * FROM relevant_files \n          WHERE message_id IN (${Object.keys(messages).map(() => '?').join(',')})`,\n    bind: Object.keys(messages),\n    callback: (row: SqlValue[]) => {\n      if (row[1] && messages[String(row[1])]) {\n        messages[String(row[1])].relevantFiles.push({\n          id: Number(row[0]),\n          messageId: String(row[1]),\n          path: String(row[2]),\n          reason: row[3] ? String(row[3]) : undefined,\n          fileType: String(row[4]) as RelevantFile['fileType'],\n          snippet: row[5] ? String(row[5]) : undefined\n        });\n      }\n    },\n  });\n\n  // Get documentation links\n  await dbInstance.exec({\n    sql: `SELECT * FROM documentation_links \n          WHERE message_id IN (${Object.keys(messages).map(() => '?').join(',')})`,\n    bind: Object.keys(messages),\n    callback: (row: SqlValue[]) => {\n      if (row[1] && messages[String(row[1])]) {\n        messages[String(row[1])].documentationLinks.push({\n          id: Number(row[0]),\n          messageId: String(row[1]),\n          url: String(row[2]),\n          title: String(row[3]),\n          description: row[4] ? String(row[4]) : undefined\n        });\n      }\n    },\n  });\n\n  // Get suggested queries\n  await dbInstance.exec({\n    sql: `SELECT * FROM suggested_queries \n          WHERE message_id IN (${Object.keys(messages).map(() => '?').join(',')})`,\n    bind: Object.keys(messages),\n    callback: (row: SqlValue[]) => {\n      if (row[1] && messages[String(row[1])]) {\n        messages[String(row[1])].suggestedQueries.push({\n          id: Number(row[0]),\n          messageId: String(row[1]),\n          query: String(row[2])\n        });\n      }\n    },\n  });\n\n  return Object.values(messages);\n}\n\nexport async function deleteChatSession(chatSessionId: string) {\n  const dbInstance = await initDB();\n  if (!dbInstance) throw new Error('Database not initialized');\n\n  // Due to ON DELETE CASCADE, we only need to delete the chat session\n  await dbInstance.exec({\n    sql: 'UPDATE chat_sessions SET is_active = 0 WHERE id = ?',\n    bind: [chatSessionId],\n  });\n} ","/** @jsx h */\nimport { h, Fragment } from 'preact';\nimport { useSignal, effect } from '@preact/signals';\nimport { sendMessageToGemini, type StructuredResponse } from '../gemini/gemini';\nimport { marked } from 'marked';\nimport { initDB, createChatSession, createMessage, getChatSessions, getMessagesForChatSession, deleteChatSession } from '../db/database';\n\nconst styles = `\n@font-face {\n  font-family: 'IosevkaTerm';\n  src: url('https://intdev-global.s3.us-west-2.amazonaws.com/public/internet-dev/6397be61-3ea4-459d-8a3e-fd95168cb214.woff2') format('woff2');\n  font-display: swap;\n}\n\n* {\n  font-family: 'IosevkaTerm', monospace;\n}\n\n.toolbar {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 400px;\n  height: 500px;\n  background: rgba(0, 0, 0, 0.8);\n  border-radius: 12px;\n  font-family: 'IosevkaTerm', monospace;\n  color: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding-bottom: 0;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.toolbar.minimized {\n  height: 60px;\n  overflow: hidden;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  font-size: 14px;\n  text-transform: lowercase;\n  height: 44px;\n  flex-shrink: 0;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 0;\n  flex: 1;\n}\n\n.chat-title {\n  opacity: 0.8;\n  cursor: pointer;\n  padding: 2px 6px;\n  border-radius: 4px;\n  transition: background 0.2s ease;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-width: 0;\n  flex: 1;\n}\n\n.controls {\n  display: flex;\n  gap: 8px;\n}\n\n.control-button {\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: rgba(255, 255, 255, 0.9);\n  cursor: pointer;\n  padding: 8px;\n  font-size: 14px;\n  border-radius: 8px;\n  min-width: 36px;\n  height: 36px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n}\n\n.control-button:hover {\n  background: rgba(255, 255, 255, 0.15);\n  border-color: rgba(255, 255, 255, 0.3);\n  transform: translateY(-1px);\n}\n\n.control-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.chats-dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.9);\n  border-radius: 8px;\n  margin: 4px;\n  max-height: 300px;\n  overflow-y: auto;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n}\n\n.chat-item {\n  padding: 8px 12px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: background 0.2s ease;\n}\n\n.chat-item:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.chat-item-title {\n  flex: 1;\n  margin-right: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.chat-item-actions {\n  opacity: 0;\n  transition: opacity 0.2s ease;\n  display: flex;\n  gap: 8px;\n}\n\n.chat-item:hover .chat-item-actions {\n  opacity: 1;\n}\n\n.chat-item-button {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.6);\n  cursor: pointer;\n  padding: 2px 6px;\n  font-size: 12px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.chat-item-button:hover {\n  color: rgba(255, 255, 255, 0.9);\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.docs-section {\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.docs-link {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  transition: background 0.2s ease;\n  text-decoration: none;\n  color: inherit;\n}\n\n.docs-link:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.docs-link-title {\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.docs-link-description {\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.suggested-queries {\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.suggested-queries-title {\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n}\n\n.suggested-queries-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.suggested-query {\n  padding: 4px 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background 0.2s ease;\n}\n\n.suggested-query:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.message {\n  opacity: 0;\n  animation: fadeIn 0.3s ease forwards;\n}\n\n.user-message {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.assistant-message {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.assistant-message pre {\n  background: rgba(255, 255, 255, 0.1);\n  padding: 8px;\n  border-radius: 4px;\n  overflow-x: auto;\n}\n\n.assistant-message code {\n  background: rgba(255, 255, 255, 0.1);\n  padding: 2px 4px;\n  border-radius: 3px;\n}\n\n.assistant-message ul, .assistant-message ol {\n  margin: 8px 0;\n  padding-left: 20px;\n}\n\n.assistant-message p {\n  margin: 8px 0;\n}\n\n.relevant-files {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.relevant-file {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background 0.2s ease;\n  max-width: 100%;\n  overflow: hidden;\n}\n\n.relevant-file:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.file-path {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.chat-sessions {\n  display: flex;\n  gap: 8px;\n  padding: 8px 12px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  overflow-x: auto;\n}\n\n.chat-tab {\n  padding: 4px 8px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  white-space: nowrap;\n  transition: background 0.2s ease;\n}\n\n.chat-tab:hover {\n  background: rgba(255, 255, 255, 0.15);\n}\n\n.chat-tab.active {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.new-chat-button {\n  background: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: rgba(255, 255, 255, 0.9);\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.new-chat-button:hover {\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.input-area {\n  position: sticky;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.8);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  padding: 16px;\n  display: flex;\n  gap: 12px;\n  backdrop-filter: blur(10px);\n}\n\n.input {\n  flex: 1;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 8px;\n  padding: 12px 16px;\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 14px;\n  line-height: 20px;\n  height: 44px;\n  transition: all 0.2s ease;\n}\n\n.input:focus {\n  border-color: rgba(255, 255, 255, 0.3);\n  background: rgba(255, 255, 255, 0.15);\n}\n\n.input::placeholder {\n  color: rgba(255, 255, 255, 0.4);\n}\n\n.send-button {\n  background: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  padding: 0 20px;\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  height: 44px;\n  min-width: 80px;\n}\n\n.send-button:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.send-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n  padding: 32px;\n  color: rgba(255, 255, 255, 0.8);\n}\n\n.empty-state-title {\n  font-size: 20px;\n  margin-bottom: 12px;\n  font-weight: 500;\n}\n\n.empty-state-description {\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.6);\n  margin-bottom: 24px;\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.content-tabs {\n  display: flex;\n  gap: 2px;\n  padding: 8px 12px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  height: 44px;\n  flex-shrink: 0;\n}\n\n.content-tab {\n  padding: 4px 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.6);\n  cursor: pointer;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.content-tab:hover {\n  color: rgba(255, 255, 255, 0.9);\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.content-tab.active {\n  color: rgba(255, 255, 255, 0.9);\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.content-section {\n  position: absolute;\n  inset: 88px 0 60px 0;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n  pointer-events: none;\n  overflow-y: auto;\n  padding: 12px;\n}\n\n.content-section.active {\n  opacity: 1;\n  pointer-events: all;\n}\n\n.files-grid, .docs-grid {\n  display: grid;\n  gap: 8px;\n  padding: 12px;\n}\n\n.file-card, .doc-card {\n  background: rgba(255, 255, 255, 0.05);\n  padding: 8px;\n  border-radius: 4px;\n  transition: background 0.2s ease;\n  cursor: pointer;\n}\n\n.file-card:hover, .doc-card:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.file-card-path {\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 4px;\n}\n\n.file-card-reason {\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.doc-card-title {\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 4px;\n}\n\n.doc-card-description {\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.loading-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: rgba(255, 255, 255, 0.6);\n  font-size: 14px;\n}\n\n.loading-dots {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  margin-left: 4px;\n}\n\n.loading-dot {\n  width: 3px;\n  height: 3px;\n  background: currentColor;\n  border-radius: 50%;\n  animation: loadingDot 1.4s infinite;\n  opacity: 0.6;\n}\n\n.loading-dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.loading-dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes loadingDot {\n  0%, 100% { opacity: 0.2; transform: scale(0.8); }\n  50% { opacity: 1; transform: scale(1); }\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.minimized .messages,\n.minimized .input-area {\n  display: none;\n}\n\n.minimized .latest-message {\n  display: block;\n  padding: 0 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 40px;\n  color: rgba(255, 255, 255, 0.7);\n}\n\n`;\n\ninterface Message {\n  role: 'user' | 'assistant';\n  content: string;\n  structuredResponse?: StructuredResponse;\n}\n\ninterface ProjectInfo {\n  name: string;\n  type: string;\n  mainTechnologies: string[];\n  description: string;\n}\n\ninterface ChatSession {\n  id: string;\n  title: string;\n  messages: Message[];\n  projectInfo?: ProjectInfo;\n}\n\ntype ContentTab = 'chat' | 'files' | 'docs' | 'suggestions';\n\nfunction getInitialResponse(): StructuredResponse {\n  return {\n    projectInfo: {\n      name: 'Example Project',\n      type: 'Library',\n      mainTechnologies: ['React', 'TypeScript', 'SQLite'],\n      description: 'A floating chat interface powered by Gemini'\n    },\n    markdown: 'Welcome to the example project!',\n    chatTitle: 'New Chat',\n    relevantFiles: [],\n    documentationLinks: [],\n    suggestedQueries: []\n  };\n}\n\nexport function Toolbar() {\n  const isInitializing = useSignal(true);\n  const isVisible = useSignal(false);\n  const isMinimized = useSignal(false);\n  const chatSessions = useSignal<ChatSession[]>([]);\n  const activeChatId = useSignal<string | null>(null);\n  const inputValue = useSignal('');\n  const editingTitle = useSignal('');\n  const activeTab = useSignal<ContentTab>('chat');\n  const projectInfo = useSignal<ProjectInfo | null>(null);\n  const hasInitialChat = useSignal(false);\n  const isLoadingMessages = useSignal(false);\n\n  // Initialize database and load chat sessions\n  effect(() => {\n    if (hasInitialChat.value) return;\n    \n    const initialize = async () => {\n      try {\n        // Initialize SQLite database\n        await initDB();\n        \n        // Load existing chat sessions\n        const sessions = await getChatSessions();\n        \n        if (sessions.length > 0) {\n          // Load messages for the most recent session\n          const messages = await getMessagesForChatSession(sessions[0].id);\n          const firstSession: ChatSession = {\n            id: sessions[0].id,\n            title: sessions[0].title,\n            messages: messages.map(m => ({\n              role: m.role === 'user' || m.role === 'assistant' ? m.role : 'assistant',\n              content: m.content,\n              structuredResponse: m.structuredResponse ? JSON.parse(m.structuredResponse) as StructuredResponse : undefined\n            }))\n          };\n          \n          chatSessions.value = [firstSession];\n          activeChatId.value = firstSession.id;\n          hasInitialChat.value = true;\n          \n          // Extract project info from the first message if it exists\n          const firstMessage = messages.find(m => m.role === 'assistant' && m.structuredResponse);\n          if (firstMessage?.structuredResponse) {\n            try {\n              const structuredResponse = JSON.parse(firstMessage.structuredResponse) as StructuredResponse;\n              if (structuredResponse.projectInfo) {\n                projectInfo.value = structuredResponse.projectInfo;\n              }\n            } catch (e) {\n              console.warn('Failed to parse structured response:', e);\n            }\n          }\n        } else {\n          // No existing chats, get initial response from Gemini\n          const initialResponse = getInitialResponse();\n          if (initialResponse.projectInfo) {\n            projectInfo.value = initialResponse.projectInfo;\n          }\n          \n          // Create initial chat in database\n          const newId = String(Date.now());\n          await createChatSession(newId, 'New Chat');\n          \n          // Create initial message\n          await createMessage(\n            String(Date.now()),\n            newId,\n            'assistant',\n            initialResponse.markdown,\n            JSON.stringify(initialResponse)\n          );\n          \n          // Update state\n          const chat: ChatSession = {\n            id: newId,\n            title: 'New Chat',\n            messages: [{\n              role: 'assistant',\n              content: initialResponse.markdown,\n              structuredResponse: initialResponse\n            }],\n            projectInfo: initialResponse.projectInfo\n          };\n          \n          chatSessions.value = [chat];\n          activeChatId.value = chat.id;\n          hasInitialChat.value = true;\n        }\n      } finally {\n        isInitializing.value = false;\n        setTimeout(() => isVisible.value = true, 50);\n      }\n    };\n\n    initialize();\n  });\n\n  // Load messages when active chat changes\n  effect(() => {\n    if (!activeChatId.value || isLoadingMessages.value) return;\n    \n    const currentChat = chatSessions.value.find(c => c.id === activeChatId.value);\n    // Skip if we already have messages for this chat\n    if (currentChat?.messages && currentChat.messages.length > 0) return;\n    \n    const loadMessages = async () => {\n      isLoadingMessages.value = true;\n      try {\n        const messages = await getMessagesForChatSession(activeChatId.value!);\n        chatSessions.value = chatSessions.value.map(session => \n          session.id === activeChatId.value ? {\n            ...session,\n            messages: messages.map(m => ({\n              role: m.role,\n              content: m.content,\n              structuredResponse: m.structuredResponse ? JSON.parse(m.structuredResponse) : undefined,\n              relevantFiles: m.relevantFiles || [],\n              documentationLinks: m.documentationLinks || [],\n              suggestedQueries: m.suggestedQueries || []\n            }))\n          } : session\n        );\n      } catch (error) {\n        console.error('Failed to load messages:', error);\n      } finally {\n        isLoadingMessages.value = false;\n      }\n    };\n\n    loadMessages();\n  });\n\n  const createNewChat = async () => {\n    if (!projectInfo.value || isInitializing.value) return;\n\n    const newId = String(Date.now());\n    \n    try {\n      // Create chat session in database\n      await createChatSession(newId, 'New Chat');\n      \n      const response = await sendMessageToGemini('Analyze this codebase and provide a structured response.');\n      \n      // Create initial message in database\n      await createMessage(\n        String(Date.now()),\n        newId,\n        'assistant',\n        response.markdown,\n        JSON.stringify(response)\n      );\n      \n      const newChat: ChatSession = {\n        id: newId,\n        title: response.chatTitle || 'New Chat',\n        messages: [{\n          role: 'assistant',\n          content: response.markdown,\n          structuredResponse: response\n        }],\n        projectInfo: response.projectInfo\n      };\n      \n      chatSessions.value = [...chatSessions.value, newChat];\n      activeChatId.value = newId;\n    } catch (error) {\n      console.error('Failed to create new chat:', error);\n    }\n  };\n\n  const formatChatTitle = (title: string) => {\n    if (!title) return projectInfo.value?.name || 'untitled project';\n    if (!projectInfo.value?.name || !projectInfo.value?.description) return title;\n    \n    const cleanTitle = title.toLowerCase().startsWith(projectInfo.value.name.toLowerCase()) \n      ? title.slice(projectInfo.value.name.length).replace(/^[-:\\s]+/, '')\n      : title;\n      \n    return `${projectInfo.value.name} - ${projectInfo.value.description}`.toLowerCase();\n  };\n\n  const activeChat = () => activeChatId.value ? \n    chatSessions.value.find(c => c.id === activeChatId.value) : null;\n\n  const deleteChat = async (chatId: string) => {\n    try {\n      await deleteChatSession(chatId);\n      chatSessions.value = chatSessions.value.filter(c => c.id !== chatId);\n      if (activeChatId.value === chatId) {\n        activeChatId.value = chatSessions.value[0]?.id || null;\n      }\n    } catch (error) {\n      console.error('Failed to delete chat:', error);\n    }\n  };\n\n  const startEditingTitle = (chatId: string) => {\n    const chat = chatSessions.value.find(c => c.id === chatId);\n    if (chat) {\n      editingTitle.value = chat.title;\n    }\n  };\n\n  const saveEditingTitle = () => {\n    if (editingTitle.value.trim()) {\n      chatSessions.value = chatSessions.value.map(chat => \n        chat.id === activeChatId.value ? \n          { ...chat, title: editingTitle.value.trim() } : \n          chat\n      );\n    }\n    editingTitle.value = '';\n  };\n\n  const handleSubmit = async (e: Event) => {\n    e.preventDefault();\n    if (!inputValue.value.trim() || isInitializing.value) return;\n\n    const userMessage = inputValue.value;\n    inputValue.value = '';\n    \n    if (!activeChatId.value) {\n      await createNewChat();\n      return;\n    }\n    \n    const chat = activeChat()!;\n    const isNewChat = chat.messages.length === 0;\n    const userMessageId = String(Date.now());\n    \n    try {\n      // Save user message to database\n      await createMessage(\n        userMessageId,\n        chat.id,\n        'user',\n        userMessage\n      );\n      \n      // Update UI immediately\n      const updatedMessages = [...chat.messages, { role: 'user', content: userMessage }];\n      chatSessions.value = chatSessions.value.map(c => \n        c.id === activeChatId.value ? { ...c, messages: updatedMessages } : c\n      );\n      \n      isInitializing.value = true;\n\n      // Get response from Gemini\n      const response = await sendMessageToGemini(userMessage, isNewChat);\n      \n      // Save assistant message to database\n      const assistantMessageId = String(Date.now() + 1);\n      await createMessage(\n        assistantMessageId,\n        chat.id,\n        'assistant',\n        response.markdown,\n        JSON.stringify(response)\n      );\n      \n      // Update UI\n      const newMessages = [...updatedMessages, { \n        role: 'assistant', \n        content: response.markdown,\n        structuredResponse: response\n      }];\n      \n      chatSessions.value = chatSessions.value.map(c => \n        c.id === activeChatId.value ? {\n          ...c,\n          title: isNewChat && response.chatTitle ? response.chatTitle : c.title,\n          messages: newMessages,\n          projectInfo: isNewChat ? response.projectInfo : c.projectInfo\n        } : c\n      );\n    } catch (error) {\n      console.error('Failed to get response:', error);\n      \n      // Save error message to database\n      const errorMessageId = String(Date.now() + 1);\n      await createMessage(\n        errorMessageId,\n        chat.id,\n        'assistant',\n        'Sorry, I encountered an error. Please try again.'\n      );\n      \n      chatSessions.value = chatSessions.value.map(c => \n        c.id === activeChatId.value ? {\n          ...c,\n          messages: [...chat.messages, { \n            role: 'assistant', \n            content: 'Sorry, I encountered an error. Please try again.'\n          }]\n        } : c\n      );\n    } finally {\n      isInitializing.value = false;\n    }\n  };\n\n  const renderMessage = (msg: Message) => {\n    if (msg.role === 'user') {\n      return <div className=\"message user-message\">{msg.content}</div>;\n    }\n\n    const html = marked(msg.content);\n    if (typeof html !== 'string') return null;\n\n    return (\n      <div className=\"message assistant-message\">\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n        \n        {msg.structuredResponse?.relevantFiles && msg.structuredResponse.relevantFiles.length > 0 && (\n          <div className=\"relevant-files\">\n            {msg.structuredResponse.relevantFiles.map((file, i) => (\n              <div key={i} className=\"relevant-file\" title={file.reason}>\n                <span className=\"file-path\">{file.path}</span>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {msg.structuredResponse?.documentationLinks && msg.structuredResponse.documentationLinks.length > 0 && (\n          <div className=\"docs-section\">\n            {msg.structuredResponse.documentationLinks.map((link, i) => (\n              <a \n                key={i} \n                href={link.url} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"docs-link\"\n              >\n                <div className=\"docs-link-title\">{link.title}</div>\n                <div className=\"docs-link-description\">{link.description}</div>\n              </a>\n            ))}\n          </div>\n        )}\n\n        {msg.structuredResponse?.suggestedQueries && msg.structuredResponse.suggestedQueries.length > 0 && (\n          <div className=\"suggested-queries\">\n            <div className=\"suggested-queries-title\">suggested questions</div>\n            <div className=\"suggested-queries-list\">\n              {msg.structuredResponse.suggestedQueries.map((query, i) => (\n                <div \n                  key={i} \n                  className=\"suggested-query\"\n                  onClick={() => {\n                    inputValue.value = query;\n                    const input = document.querySelector('.input') as HTMLInputElement;\n                    if (input) {\n                      input.focus();\n                    }\n                  }}\n                >\n                  {query.toLowerCase()}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <style>{styles}</style>\n      <div \n        className={`toolbar ${isMinimized.value ? 'minimized' : ''} ${isVisible.value ? '' : 'opacity-0'}`}\n      >\n        <div className=\"header\">\n          <div className=\"header-left\">\n            <div className=\"chat-title\">\n              {isInitializing.value ? (\n                <span className=\"loading-title\">\n                  loading\n                  <div className=\"loading-dots\">\n                    <div className=\"loading-dot\"></div>\n                    <div className=\"loading-dot\"></div>\n                    <div className=\"loading-dot\"></div>\n                  </div>\n                </span>\n              ) : (\n                formatChatTitle(activeChat()?.title || '')\n              )}\n            </div>\n          </div>\n          <div className=\"controls\">\n            <button \n              className=\"control-button\" \n              onClick={createNewChat}\n              disabled={isInitializing.value}\n            >\n              +\n            </button>\n            <button \n              className=\"control-button\" \n              onClick={() => isMinimized.value = !isMinimized.value}\n            >\n              {isMinimized.value ? '+' : '-'}\n            </button>\n          </div>\n        </div>\n\n        {!isMinimized.value && (\n          <div className=\"empty-state\">\n            <div className=\"empty-state-title\">welcome to react llm</div>\n            <div className=\"empty-state-description\">\n              start a new chat to get ai-powered help with your react codebase\n              {isInitializing.value && (\n                <div className=\"loading-dots\">\n                  <div className=\"loading-dot\"></div>\n                  <div className=\"loading-dot\"></div>\n                  <div className=\"loading-dot\"></div>\n                </div>\n              )}\n            </div>\n            <button \n              className=\"new-chat-button\" \n              onClick={createNewChat}\n              disabled={isInitializing.value}\n            >\n              <span>+</span> new chat\n            </button>\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n"],"mappings":"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","names":["b","e","f","i","p","l","r","u2","c","u","err","byteArray","link","m","d","xhr","lazyArray","x","a2","a3","a4","k","n","v","pDb","m2","j","schema","s","sig","list","h","a","t","BigInt","BigInt64Array","name","key","StructBinder","StructCtor","s2","s3","db","pMem","callee","tgt","func","out","stmt","ndx","val","sqlite3","require","o","options","w","h2","import_meta","f","e","p","sqlite3Worker1Promiser","slice","options","vnodeId","isValidElement","rerenderQueue","prevDebounce","defer","depthSort","CAPTURE_REGEX","eventClock","eventProxy","eventProxyCapture","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","isArray","Array","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","createVNode","original","vnode","__k","__","__b","__e","__c","constructor","__v","__i","__u","Fragment","props","children","BaseComponent","context","this","getDomSibling","vnode","childIndex","__","__i","sibling","__k","length","__e","type","updateParentDomPointers","i","child","__c","base","enqueueRender","c","__d","rerenderQueue","push","process","__r","prevDebounce","options","debounceRendering","defer","component","newVNode","oldVNode","oldDom","commitQueue","refQueue","l","sort","depthSort","shift","__v","__P","assign","diff","__n","namespaceURI","__u","commitRoot","diffChildren","parentDom","renderResult","newParentVNode","oldParentVNode","globalContext","namespace","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","result","oldChildren","EMPTY_ARR","newChildrenLength","constructNewChildrenArray","EMPTY_OBJ","ref","applyRef","insert","nextSibling","skewedIndex","matchingIndex","oldChildrenLength","remainingOldChildren","skew","Array","constructor","String","createVNode","isArray","__b","key","findMatchingIndex","unmount","parentVNode","contains","insertBefore","nodeType","findMatchingIndex","childVNode","oldChildren","skewedIndex","remainingOldChildren","x","y","key","type","oldVNode","__u","length","setStyle","style","value","setProperty","IS_NON_DIMENSIONAL","test","dom","name","oldValue","namespace","useCapture","o","cssText","replace","CAPTURE_REGEX","toLowerCase","slice","l","_attached","eventClock","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","removeAttribute","setAttribute","createEventProxy","this","eventHandler","_dispatched","options","event","diff","parentDom","newVNode","globalContext","excessDomChildren","commitQueue","oldDom","isHydrating","refQueue","tmp","c","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","isClassComponent","provider","componentContext","i","renderHook","count","isTopLevelFragment","renderResult","newType","constructor","__e","__b","outer","props","prototype","render","contextType","__c","__","__E","BaseComponent","doRender","sub","state","context","__n","__d","__h","_sb","__s","getDerivedStateFromProps","assign","__v","componentWillMount","componentDidMount","push","componentWillReceiveProps","shouldComponentUpdate","__k","some","vnode","componentWillUpdate","componentDidUpdate","__P","__r","getChildContext","getSnapshotBeforeUpdate","Fragment","children","diffChildren","isArray","base","then","MODE_HYDRATE","nodeType","nextSibling","indexOf","removeNode","diffElementNodes","diffed","commitRoot","root","applyRef","cb","call","newHtml","oldHtml","newChildren","inputValue","checked","localName","document","createTextNode","createElementNS","is","__m","data","childNodes","EMPTY_OBJ","attributes","__html","innerHTML","content","getDomSibling","ref","hasRefUnmount","current","unmount","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","documentElement","createElement","namespaceURI","firstChild","slice","EMPTY_ARR","options","__e","error","vnode","oldVNode","errorInfo","component","ctor","handled","__","__c","constructor","getDerivedStateFromError","setState","__d","componentDidCatch","__E","e","vnodeId","isValidElement","undefined","BaseComponent","prototype","update","callback","s","this","__s","state","assign","props","__v","_sb","push","enqueueRender","forceUpdate","__h","render","Fragment","rerenderQueue","defer","Promise","then","bind","resolve","setTimeout","depthSort","a","b","__b","process","__r","CAPTURE_REGEX","eventClock","eventProxy","createEventProxy","eventProxyCapture","i","currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","options","_options","oldBeforeDiff","__b","oldBeforeRender","__r","oldAfterDiff","diffed","oldCommit","__c","oldBeforeUnmount","unmount","oldRoot","__","getHookState","index","type","__h","hooks","__H","length","push","useMemo","factory","args","state","getHookState","currentIndex","argsChanged","__H","__","__h","flushAfterPaintEffects","component","afterPaintEffects","shift","__P","__H","__h","forEach","invokeCleanup","invokeEffect","e","options","__e","__v","__b","vnode","currentComponent","oldBeforeDiff","__","parentDom","__k","__m","oldRoot","__r","oldBeforeRender","currentIndex","hooks","__c","previousComponent","hookItem","__N","_pendingArgs","diffed","oldAfterDiff","c","length","push","prevRaf","requestAnimationFrame","afterNextFrame","commitQueue","some","filter","cb","oldCommit","unmount","oldBeforeUnmount","hasErrored","s","HAS_RAF","callback","raf","done","clearTimeout","timeout","cancelAnimationFrame","setTimeout","hook","comp","cleanup","argsChanged","oldArgs","newArgs","arg","index","BRAND_SYMBOL","Symbol","for","endBatch","batchDepth","error","hasError","batchedEffect","effect","batchIteration","next","_nextBatchedEffect","_flags","needsToRecompute","_callback","err","evalContext","batchedEffect","batchDepth","batchIteration","globalVersion","addDependency","signal","evalContext","node","_node","_target","_version","_source","_prevSource","_sources","_nextSource","_prevTarget","_nextTarget","_rollbackNode","_flags","_subscribe","Signal","value","this","_value","_targets","prototype","brand","BRAND_SYMBOL","_refresh","_unsubscribe","prev","next","subscribe","fn","effect","prevContext","valueOf","toString","toJSON","peek","Object","defineProperty","get","set","Error","_notify","endBatch","needsToRecompute","target","prepareSources","rollbackNode","cleanupSources","head","Computed","call","undefined","_fn","_globalVersion","err","OUTDATED","computed","cleanupEffect","cleanup","_cleanup","disposeEffect","endEffect","Effect","_nextBatchedEffect","_callback","finish","_start","bind","batchedEffect","_dispose","hook","hookName","hookFn","options","bind","currentComponent","finishUpdate","setCurrentUpdater","updater","_start","SignalValue","data","currentSignal","useSignal","value","s","useMemo","v","this","__v","__","__c","_updateFlags","_updater","_callback","_this$base","end","isValidElement","base","nodeType","setState","computed","displayName","Object","defineProperties","Signal","prototype","constructor","configurable","undefined","type","props","get","__b","old","vnode","signalProps","i","__np","peek","component","update","effect","createUpdater","error","oldVNode","dom","__e","renderedProps","updaters","_updaters","prop","_dispose","signal","createPropUpdater","_update","propSignal","setAsProperty","ownerSVGElement","changeSignal","newSignal","newProps","setAttribute","removeAttribute","index","Component","shouldComponentUpdate","state","hasSignals","_sources","__f","u","hasHooksState","HAS_PENDING_UPDATE","HarmCategory","HarmBlockThreshold","HarmProbability","BlockReason","FinishReason","TaskType","Task","e","v","g","i","q","n","a","b","r","f","e","i","_a","e","s","escape","html","_","n","e","i","c","l","b","link","lexer","options","list","t","tag","text","block","parser","j","k","tokens","args","ret","walkTokens","src","e","link","getInitialResponse","m","e","initialResponse","c","html","i","link"]}